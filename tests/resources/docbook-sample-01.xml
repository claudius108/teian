<?xml version="1.0" encoding="utf-8" standalone="no"?>
<book xmlns="http://docbook.org/ns/docbook" id="docbookeasy">
	<title>DocBookEasy</title>
	<bookinfo id="INFO">
		<author>
			<firstname>Dashamir</firstname>
			<surname>Hoxha</surname>
			<affiliation>
				<orgname>AOLSP</orgname>
				<address>
					<email>dhoxha@albaniaonline.net</email>
				</address>
			</affiliation>
		</author>
		<abstract>
			<para>This guide is useful both for the administrator and the user of DocBookEasy. It explains how to install,
				configure and maintain the DocBookEasy. It also explains its features and how to use them.</para>
		</abstract>
		<keywordset>
			<keyword>DocBook</keyword>
			<keyword>XML</keyword>
			<keyword>wiki</keyword>
		</keywordset>
		<legalnotice>
			<para>Copyright (C) 2008 Dashamir Hoxha. Permission is granted to copy, distribute and/or modify this document under
				the terms of the GNU Free Documentation License, Version 1.1 or any later version published by the Free Software
				Foundation; with no Invariant Sections, with no Front-Cover Texts, and with no Back-Cover Texts. A copy of the
				license is included in the section entitled "GNU Free Documentation License."</para>
		</legalnotice>
	</bookinfo>
	<chapter id="installation">
		<title>Installation</title>
		<para />
		<section id="requirements">
			<title>Requirements (Dependencies)</title>
			<para>
				<emphasis>DocBookEasy</emphasis>
				is built using the
				<ulink url=" http://phpwebapp.sourceforge.net">phpWebApp framework </ulink>
				. It runs with
				<emphasis>apache</emphasis>
				and
				<emphasis>php &gt; 4.3</emphasis>
				. For keeping the history of the modifications of the documents it uses
				<emphasis>subversion</emphasis>
				(which can also be used to update the application to the latest version). Some other tools/programs/packages that
				are required or needed are listed below.
			</para>
			<itemizedlist>
				<listitem>
					<para>
						It requires the
						<emphasis>php command line interface</emphasis>
						(debian package
						<emphasis>php4-cli</emphasis>
						or
						<emphasis>php5-cli</emphasis>
						) for running some shell scripts written in php (pre-processing, post-processing, etc.)
					</para>
				</listitem>
				<listitem>
					<para>
						It requires
						<emphasis>xsltproc</emphasis>
						for explode/implode and other processing and transformations of XML content.
					</para>
				</listitem>
				<listitem>
					<para>
						Requires
						<emphasis>xmllint</emphasis>
						(debian package
						<emphasis>libxml2-utils</emphasis>
						) for XML checking and DocBook validation.
					</para>
				</listitem>
				<listitem>
					<para>
						Requires
						<emphasis>mailx</emphasis>
						or any other program that can send emails (called by the php function
						<emphasis>mail()</emphasis>
						).
						<tip>
							<para>
								If the box of docbookeasy has no connection to internet and the mails are sent to the local users, then I use
								<emphasis>dnsmasq</emphasis>
								as well so that MX queries to the local domain are resolved quickly. Otherwise there are delays while sending
								notification emails (e.g. on-commit notifications), which slow down the work of the application.
							</para>
						</tip>
					</para>
				</listitem>
				<listitem>
					<para>
						Requires
						<emphasis>sed</emphasis>
						and
						<emphasis>gawk</emphasis>
						, which are used in some shell scripts.
					</para>
				</listitem>
				<listitem>
					<para>
						Requires
						<emphasis>openssl</emphasis>
						for encrypting passwords (the command
						<command>openssl passwd</command>
						).
					</para>
				</listitem>
				<listitem>
					<para>Needs sudo so that apache can run commands with the permissions of the DATA_OWNER. </para>
				</listitem>
				<listitem>
					<para>
						Needs
						<emphasis>swish-e</emphasis>
						for indexing the content and for searching.
					</para>
				</listitem>
				<listitem>
					<para>
						Needs
						<emphasis>xmlto</emphasis>
						,
						<emphasis>docbook-utils</emphasis>
						, and
						<emphasis>dblatex</emphasis>
						for converting DocBook to other formats: HTML, LaTeX, PDF, TXT, etc. (
						<emphasis>dblatex</emphasis>
						requires
						<emphasis>python</emphasis>
						etc.)
					</para>
				</listitem>
				<listitem>
					<para>
						Needs
						<emphasis>perl</emphasis>
						(which is required by some scripts '*.pl' in
						<filename>content/SVN/</filename>
						).
					</para>
				</listitem>
				<listitem>
					<para>
						Needs
						<emphasis>mysql</emphasis>
						for installing and using webnotes.
					</para>
				</listitem>
				<listitem>
					<para>
						Needs
						<emphasis>msgfmt</emphasis>
						(package
						<emphasis>gettext</emphasis>
						) to convert l10n files from *.po to *.mo . However this can be done in another system as well and the files can
						be transfered to the docbookeasy system.
					</para>
				</listitem>
				<listitem>
					<para>
						Needs
						<emphasis>doxygen</emphasis>
						and
						<emphasis>phpDocumentor</emphasis>
						for generating codedocs; doxygen needs
						<emphasis>graphviz</emphasis>
						for generating UML diagrams. phpDocumentor can be downloaded from:
						<ulink url="https://sourceforge.net/project/showfiles.php?group_id=11194&amp;release_id=500918" />
					</para>
				</listitem>
			</itemizedlist>
			<para>
				If you compile
				<ulink url=" http://swish-e.org">SWISH-E </ulink>
				form the source, then keep in mind that DocBookEasy requires the
				<emphasis>XML2</emphasis>
				parser of swish-e (in order to index the XML content). For this reason, the libraries
				<emphasis>libxml2</emphasis>
				and
				<emphasis>libxml2-devel</emphasis>
				must be installed in the system before compiling swish-e.
			</para>
			<para>
				In RedHat/Fedora
				<emphasis>xsltproc</emphasis>
				is in the package
				<emphasis>libxslt</emphasis>
				. Also these RPM packages are required, in order to make the content:
				<emphasis>docbook-dtds</emphasis>
				,
				<emphasis>xml-common</emphasis>
				,
				<emphasis>sgml-common</emphasis>
				. In order to generate the formats, these packages are needed as well:
				<emphasis>xmlto</emphasis>
				,
				<emphasis>xmltex</emphasis>
				,
				<emphasis>docbook-style-xsl</emphasis>
				,
				<emphasis>docbook-utils</emphasis>
				,
				<emphasis>docbook-utils-pdf</emphasis>
				,
				<emphasis>docbook-style-dsssl</emphasis>
				(and their dependencies as well:
				<emphasis>openjade</emphasis>
				,
				<emphasis>perl-SGMLSpm</emphasis>
				,
				<emphasis>passivetex</emphasis>
				,
				<emphasis>jadetex</emphasis>
				,
				<emphasis>tetex</emphasis>
				,
				<emphasis>tetex-fonts</emphasis>
				,
				<emphasis>tetex-latex</emphasis>
				,
				<emphasis>tetex-dvips</emphasis>
				,
				<emphasis>psutils</emphasis>
				,
				<emphasis>netpbm</emphasis>
				,
				<emphasis>netpbm-progs</emphasis>
				,
				<emphasis>libtiff</emphasis>
				, etc.).
			</para>
			<para>
				In general,
				<emphasis>'Applications/Authoring and Publishing'</emphasis>
				group of packages should be installed in order to include the neccessary tools about SGML, XML, XSL, DocBook, etc.
				in RedHat/Fedora.
			</para>
		</section>
		<section id="preparing">
			<title>Preparing</title>
			<itemizedlist>
				<listitem>
					<para>
						Make sure that you have
						<emphasis>DocBookEasy</emphasis>
						and
						<emphasis>phpWebApp</emphasis>
						. If you have not downloaded any release, you can get them like this:
						<screen>
							<prompt>bash$</prompt>
							<command>cd /var/www/</command>
							<prompt>bash$</prompt>
							<command>svn checkout https://svn.sourceforge.net/svnroot/doc-book/docbookeasy/trunk docbookeasy</command>
							<prompt>bash$</prompt>
							<command>cd docbookeasy/</command>
							<prompt>bash$</prompt>
							<command>svn checkout https://svn.sourceforge.net/svnroot/phpwebapp/web_app/trunk web_app</command>
						</screen>
					</para>
				</listitem>
				<listitem>
					<para>
						Make sure that the required packages are installed or install them if they are not. In RedHat/Fedora it can be
						done like this:
						<screen>
							<prompt>bash$</prompt>
							<command>rpm -q package-name</command>
							<prompt>bash#</prompt>
							<command>yum install package-name</command>
							<prompt>bash#</prompt>
							<command>apt-get install package-name</command>
						</screen>
						In Debian it can be done like this:
						<screen>
							<prompt>bash$</prompt>
							<command>aptitude search package-name</command>
							<prompt>bash$</prompt>
							<command>aptitude install package-name</command>
						</screen>
					</para>
				</listitem>
				<listitem>
					<para>
						Manual installation of dblatex (which is used for converting to formats PDF and LaTeX) can be done like this:
						<orderedlist numeration="arabic">
							<listitem>
								<para>Download and untar it somewhere. </para>
							</listitem>
							<listitem>
								<para>
									Install it like this:
									<screen>
										<prompt>bash#</prompt>
										<command>cd dblatex/</command>
										<prompt>bash#</prompt>
										<command>python ./setup.py install --prefix=/usr/local --catalogs=/etc/sgml/catalog</command>
									</screen>
								</para>
							</listitem>
						</orderedlist>
					</para>
				</listitem>
				<listitem>
					<para>
						To compile and install manually
						<emphasis>swish-e</emphasis>
						, follow these steps:
						<orderedlist numeration="arabic">
							<listitem>
								<para>
									Download it from
									<ulink url="http://swish-e.org/" />
									and untar it somewhere.
								</para>
							</listitem>
							<listitem>
								<para>
									Make sure that packages
									<emphasis>libxml2</emphasis>
									and
									<emphasis>libxml2-devel</emphasis>
									are installed.
								</para>
							</listitem>
							<listitem>
								<para>
									Compile with
									<command>./configure</command>
									and
									<command>make</command>
									and
									<command>make check</command>
									.
								</para>
							</listitem>
							<listitem>
								<para>
									Install with
									<command>make install</command>
									.
								</para>
							</listitem>
						</orderedlist>
					</para>
				</listitem>
			</itemizedlist>
		</section>
		<section id="installing">
			<title>Installing</title>
			<itemizedlist>
				<listitem>
					<para>
						Before starting the installation of DocBookEasy, create a user, e.g.
						<emphasis>dbeasy</emphasis>
						, that will be the owner of the application and the data:
						<screen>
							<prompt>bash#</prompt>
							<command>useradd dbeasy</command>
							<prompt>bash#</prompt>
							<command>chown -R dbeasy /var/www/html/docbookeasy/</command>
						</screen>
					</para>
				</listitem>
				<listitem>
					<para>
						Edit
						<filename>docbookeasy.conf</filename>
						and modify any settings there, such as DATA_OWNER, ADMIN_EMAIL, etc.
					</para>
				</listitem>
				<listitem>
					<para>
						Switch to
						<emphasis>root</emphasis>
						and run
						<command>install/sudo_config.sh</command>
						.
					</para>
				</listitem>
				<listitem>
					<para>
						Go back to the user
						<emphasis>dbeasy</emphasis>
						and run
						<command>install/install.sh</command>
						.
					</para>
				</listitem>
				<listitem>
					<para>
						After installing DocBookEasy, open in browser
						<ulink url="admin.php">admin.php</ulink>
						and login as
						<emphasis>superuser</emphasis>
						. There you can add new books in DocBookEasy and organize them in a menu. You can also manage the users of the
						system and their permissions. Each book should have at least one admin.
						<tip>
							<para>
								The password of the superuser can be changed at any time by the script:

								<screen>
									<prompt>bash$</prompt>
									<command>install/set_su_passwd.sh</command>
								</screen>
							</para>
						</tip>
					</para>
				</listitem>
			</itemizedlist>
		</section>
		<section id="sudo">
			<title>sudo</title>
			<para>Usually, when a file is modified from the web interface its ownership is set to apache. This would not allow
				the data owner to touch it (unless it is the root). However DocBookEasy should be managed both from the command line
				and the web interface. </para>
			<para>
				To solve this, the configuration of
				<emphasis>sudo</emphasis>
				is modified to allow apache to run any commands with the permissions of the data owner (dbeasy), without a password.
				This line is appended at
				<filename>/etc/sudoers</filename>
				:
				<programlisting><![CDATA[apache     ALL = (dbeasy) NOPASSWD: ALL]]></programlisting>
				The config line "Defaults requiretty" is commented as well.
			</para>
			<para>
				Then, every modification that is done in the filesystem from the application code, is done by calling a shell
				command like this:
				<programlisting><![CDATA[sudo -u dbeasy $shell_command]]></programlisting>
			</para>
			<para>
				As a result, all the files that belong to
				<emphasis>dbeasy</emphasis>
				can be modified by
				<emphasis>apache</emphasis>
				and after they are modified they still belong to
				<emphasis>dbeasy</emphasis>
				. So, the application content can be maintained both from the command line and from the web interface.
			</para>
			<warning>
				<para>
					apache can do in the system anything that can be done by the user
					<emphasis>dbeasy</emphasis>
					. It can also modify the application files (besides the content files), and this may be a security problem
					(threatening the security and integrity of DocBookEasy, not the system).

					<note>
						<para>Maybe this can be solved by SELinux, allowing apache to be able to touch only the content files and not the
							application files. However I don't know yet how this can be done.</para>
					</note>
				</para>
			</warning>
			<note>
				<para>
					Another solution (instead of using
					<emphasis>sudo</emphasis>
					) could have been to make writable by everyone the files that need to be accessed by both the data owner and
					apache. This still may have some security problems and other problems as well.
				</para>
			</note>
		</section>
	</chapter>
	<chapter id="managing_content">
		<title>Managing the Content</title>
		<para />
		<section id="content_overview">
			<title>General Overview</title>
			<para>
				The content (books and articles) are kept in the folder
				<filename>content/</filename>
				, organized according to certain conventions. In this folder are also the shell scripts that manage the content.
			</para>
			<para>The basic format of the docs is XML/DocBook, which is then converted to other formats. </para>
			<para>The XML/DocBook documents are exploded to XML chunks according to chapter-s, section-s and simplesect-s, which
				are stored to folders and subfolders according to the structure of the book. HTML chunks are also generated for each
				node, which are used as a cache to display the node content in a browser. </para>
			<para>These XML chunks can be viewed and modified by the application. After they are modified, they can be imploded
				to create an XML/DocBook document that contains the modifications. </para>
			<para>The XML chunks are stored in a local Subversion repository and modifications to them are committed to
				Subversion when they are approved. There is a public copy of the XML chunks and a workspace copy. Modifications are
				always done in the workspace copy, and when they are approved and commited to Subversion, they are also updated to
				the public copy. Any cache files related to them (in the public copy) are updated automatically as well. </para>
			<para>The XML/DocBook docs can also be converted automatically to other formats, like PDF, RTF, HTML, TXT, LaTeX. The
				conversion can be done using existing converting tools, such as docbook2html, xmlto, dblatex, pdflatex, or custom
				XSL transformers. These formats can also be downloaded from the browser. </para>
		</section>
		<section id="chunk">
			<title>Chunking</title>
			<para>The XML/DocBook documents are converted to a chunked format, according to chapter-s and section-s, which are
				stored to folders and subfolders according to the structure of the book. The name of the folders is the same as the
				id of the section, and if it has no id, then an id is generated for it. </para>
			<para>
				The script
				<command>chunk/chunk.sh</command>
				can be used to convert an initial document:
				<screen>bash$ chunk/chunk.sh

					Usage: chunk/chunk.sh file.xml [book_id] [lng]

					Converts a DocBook file into docbook chunk files according to
					chapters, sections, etc. These chunk files are included to
					each-other by &lt;xi:include href=... /&gt; .
					The output is placed in the directory 'chunk/tmp/book_id/' .

					Param file.xml is the DocBook document (book, article, etc.) to be chunked.

					Param book_id is the id of the document; if missing, it is taken
					from the attribute 'id' of the root element of file.xml.

					Param lng can be: en, en_US, en_US.UTF-8, sq_AL, etc.; if missing it is
					taken from the attribute 'lang' of file.xml (default is en).

					Important: the path of file.xml should be either absolute,
					or relative to the 'content/' directory.</screen>
			</para>
			<important>
				<para>
					The script
					<filename>chunk/chunk.sh</filename>
					assumes that it is called from the directory
					<filename>content/</filename>
					, so the path of the xml file that is passed as parameter, should be either relative to this directory or absolute.
				</para>
			</important>
			<para>
				This script will create the folder
				<filename>chunk/tmp/book_id/</filename>
				where it will place the chunked document. If the parameter
				<emphasis>book_id</emphasis>
				is not given, then the value of the attribute
				<emphasis>id</emphasis>
				of the root element (&lt;book&gt; or &lt;article&gt;) is used.
			</para>
		</section>
		<section id="importing">
			<title>Importing Documents</title>
			<para>
				The script
				<filename>import.sh</filename>
				is used to import into the DocBookEasy system an existing
				<emphasis>book</emphasis>
				or
				<emphasis>article</emphasis>
				(in
				<emphasis>XML/DocBook</emphasis>
				format):
				<screen><![CDATA[bash$ ./import.sh 

Usage: ./import.sh file.xml

The parameter 'file.xml' is the DocBook document to be imported.
The path of the file 'file.xml' should be either absolute, or relative
to the 'content/' directory.]]></screen>
			</para>
			<para>
				The book_id and lng are taken from the values of attributes
				<emphasis>id</emphasis>
				and
				<emphasis>lang</emphasis>
				of the tag &lt;book&gt; or &lt;article&gt; of
				<filename>file.xml</filename>
				.
			</para>
			<para>
				<filename>import.sh</filename>
				calls inside it the scripts
				<filename>import/svn_import.sh</filename>
				and
				<filename>import/svn_checkout.sh</filename>
				.
			</para>
			<para>
				The script
				<filename>import/svn_import.sh</filename>
				converts first the document into a chunked format, then creates a svn repository (in the given local or absolute
				path) and then imports the chunked document into it. The book_id and lng are taken from the values of attributes
				<emphasis>id</emphasis>
				and
				<emphasis>lang</emphasis>
				of the root element of the document.
				<screen><![CDATA[bash$ import/svn_import.sh 

Usage: import/svn_import.sh xml_file [svn_repo]

Import the 'xml_file' document to a svn repository.

The parameter 'svn_repo' is the path where the svn repository is created. 
If it is missing then a default path of 'svn/book_id/lng/' is used.

Note: The path of the 'xml_file' should be either absolute, or relative
      to the 'content/' directory. The same applies to 'svn_repo'.]]></screen>
			</para>
			<para>
				The script
				<filename>import/svn_checkout.sh</filename>
				checks out a document from a svn url and then imports it into docbookeasy.
				<screen><![CDATA[bash$ import/svn_checkout.sh 

Usage: import/svn_checkout.sh svn_url [book_id] [lng]

Checkout a book from the given svn repository (which can be
local or remote). It is checked out in the public space and 
in the workspace, and the xhtml files are created as well.

The parameter 'svn_url' is the url of the svn repository
of the document, which can be local or remote.
If 'book_id' is not given, then 'book_id' and 'lng' are
extracted from 'svn_url'.]]></screen>
			</para>
			<para>
				During the installation time, the script
				<command>make-content.sh</command>
				calls
				<command>import/svn_import.sh</command>
				,
				<command>import/svn_checkout.sh</command>
				and
				<command>import/add_media.sh</command>
				to import several initial documents that are in the folder
				<filename>initial_xml/</filename>
				.
				<note>
					<para>
						Although the script
						<command>import.sh</command>
						is provided as an easy way to add documents in the system, using the scripts
						<command>import/svn_import.sh</command>
						and
						<command>import/svn_checkout.sh</command>
						provides more flexibility. For example,
						<command>import/svn_checkout.sh</command>
						can use a remote svn url, integrating the local DocBookEasy with a remote one.
					</para>
				</note>
			</para>
			<tip>
				<title>Accessing The New Book</title>
				<para>
					The book that is just imported in the system is ready for viewing and editing. It can be accessed using
					<emphasis>xref.php</emphasis>
					, like this:

					<itemizedlist>
						<listitem>
							<para>
								<ulink url="xref.php?/book_id" />
								or
								<ulink url="xref.php?view/book_id" />
							</para>
						</listitem>
						<listitem>
							<para>
								<ulink url="xref.php?/book_id//lng" />
								or
								<ulink url="xref.php?/book_id/chunk_id/lng" />
							</para>
						</listitem>
						<listitem>
							<para>
								<ulink url="xref.php?edit/book_id" />
								or
								<ulink url="xref.php?admin/book_id" />
							</para>
						</listitem>
					</itemizedlist>
				</para>
			</tip>
			<tip>
				<title>Adding The New Book in The Menu of DocBookEasy</title>
				<para>
					To list the newly added book in the menu, login as
					<emphasis>superuser</emphasis>
					at
					<ulink url="admin.php" />
					and go to the menu editing interface. After adding the book in the menu, click
					<emphasis>Apply Changes</emphasis>
					.
				</para>
			</tip>
			<para>
				Creating/importing new books/articles can also be done from a web interface which is available only to the superuser
				(see
				<xref linkend="add_book" />
				)./
			</para>
		</section>
		<section id="add_media">
			<title>Adding Media Files</title>
			<para>
				The script
				<filename>import/add_media.sh</filename>
				is used to add media files to a document:
				<screen><![CDATA[bash$ import/add_media.sh 

Usage: import/add_media.sh media-files.tgz book_id [lng]

Add media files to the given book.

The parameter 'media-files.tgz' contains the media files of the book,
organized in directories and subdirectories according to the chunks
and subchunks to which they belong.

The parameter lng can be: en, en_US, en_US.UTF-8, sq_AL, etc. (default is en).

Note: the path of the file 'media-files.tgz' should be either absolute,
      or relative to the 'content/' directory.]]></screen>
			</para>
			<para>The last parameter of the script is a compressed archive (.tgz) of the media files of the book, if it has any.
				They are organized in directories and subdirectories according to the id-s of the sections and subsections to which
				they belong. </para>
			<para>
				The format of media files is the same format that is exported by docbookeasy. It can be downloaded from the
				<emphasis>Downloads / Media Files</emphasis>
				(on the left side of the application).
			</para>
		</section>
		<section id="clean_docs">
			<title>Removing Documents</title>
			<para>
				In order to remove a book from the system (e.g. in case that it was imported by mistake), the script
				<command>clean.sh</command>
				can be used:
			</para>
			<screen>
        <![CDATA[bash$ ./clean.sh
Usage: ./clean.sh [book_id | all] [lng]]]>
			</screen>
			<caution>
				<para>
					Be carefull, because
					<command>./clean.sh all</command>
					does not only clean all the imported books, but it also deletes the search indexes, etc. In general, it brings the
					content to the state that it was before importing any books at all (before installation).
				</para>
			</caution>
			<para>
				Deleting documents can also be done from a web interface which is available only to the superuser (see
				<xref linkend="add_book" />
				).
			</para>
		</section>
		<section id="indexing">
			<title>Indexing Documents</title>
			<para>
				In order to be able to search the documents, they must be indexed. Indexing and searching the documents is done by
				<ulink url="http://swish-e.org">swish-e</ulink>
				. The script
				<command>make_index.sh</command>
				is used to index the content:
				<screen><![CDATA[bash$ search/make_index.sh]]></screen>
				It will index all the books and all the languages and will generate an index file that is used by the search
				interface. This script indexes only the public copy of the books, not the workspace (that is being edited and not
				approved yet). So, it should be called whenever there are significant modifications in the content of the books, or
				periodically (e.g. by a cron job each night) in order to refresh the index and to keep the searches accurate.
			</para>
			<note>
				<title>Two index files</title>
				<para>
					Actually, two index files are created instead of one, according to two different config files. During the search,
					both the global index and the tag index are searched. This is done in order to allow both global searching and tag
					searching. According to the docs of swish-e it should work without the need for this trick, however it seems not to
					work. E.g. if I use the directive:
					<emphasis>MetaNames command</emphasis>
					then the search for
					<emphasis>'command=ls'</emphasis>
					will give results, but the search for
					<emphasis>'ls'</emphasis>
					will not give any results. With 2 indexes, both of them will give results, however the search for
					<emphasis>'command=ls and ls'</emphasis>
					will yield no results.
				</para>
			</note>
		</section>
		<section id="concating">
			<title>Concating</title>
			<para>
				Concating converts a document that is in the chunked format into a single file document, in case that such a version
				is needed. So, it is the reverse process of chunking. Concating is done by the script
				<command>concat/concat.sh</command>
				:
				<screen><![CDATA[bash$ concat/concat.sh 
Usage: concat/concat.sh book-id [lng] [books_path]
'books_path' is either 'books' or 'workspace']]></screen>
			</para>
			<para>
				The chunks that are imploded by default are those in the public space. So, if there are unapproved modifications,
				they will not be included in the resulting xml file. However, if
				<emphasis>workspace</emphasis>
				is passed as the third parameter, then the chunks in the workspace will be imploded.
			</para>
			<para>
				By default, only
				<emphasis>section</emphasis>
				tags are used in the generated file (not
				<emphasis>sect1</emphasis>
				,
				<emphasis>sect2</emphasis>
				, etc.). If you want to convert the
				<emphasis>section</emphasis>
				tags to
				<emphasis>sectX</emphasis>
				, you can use the
				<filename>section2sect.sh</filename>
				script:
				<screen><![CDATA[bash$ concat/section2sect.sh
Usage: concat/section2sect.sh file.xml > output.xml
Converts <section> elements to <sectX> elements.
The resulting xml is displayed in the standard output,
so it should be redirected to a file.]]></screen>
			</para>
		</section>
		<section id="commit-notification">
			<title>Automatic Notification on Commit</title>
			<para>
				The script
				<command>email-notifications/email-notifications.sh</command>
				is used to enable/disable automatic notifications on commit:
			</para>
			<screen>
        <![CDATA[bash$ email-notifications/email-notifications.sh 
Usage: email-notifications/email-notifications.sh (enable | disable | show) book_id [lng]]]>
			</screen>
			<para>
				Whenever chunks are approved (and committed in subversion), notification emails are generated and sent automatically
				about the modified chunks and their diffs. This is done by the svn hook
				<command>post-commit</command>
				, which calls the script
				<command>commit-email.pl</command>
				to send emails to the admin of DocBookEasy. The email of admin is taken from the variable ADMIN_EMAIL in
				<filename>books.conf</filename>
				during installation, however
				<command>post-commit</command>
				can be modified manually later, to change the email to which the notifications are sent.
			</para>
			<para>
				<command>commit-email.pl</command>
				calls the script
				<command>txt_diff.sh</command>
				to get the difference.
				<command>txt_diff.sh</command>
				gets the old and new revisions from subversion, converts them to text format and then makes a unified diff of them.
				This is done to make the diffs more readable. However if there are problems with converting to text format (e.g.
				validation problems), it will produce no output at all.
			</para>
		</section>
		<section id="formats">
			<title>Converting From DocBook To Other Formats</title>
			<para>
				Converting from DocBook to other formats is done using some existing tools and custom converters. These tools are
				placed in the directory
				<filename>content/downloads/</filename>
				.
			</para>
			<para>
				The scripts that are used for generating other formats from a DocBook document are:
				<command>docbook2.sh</command>
				,
				<command>xmlto.sh</command>
				and
				<command>dblatex.sh</command>
				.
				<itemizedlist>
					<listitem>
						<para>
							<command>docbook2.sh</command>
							uses the tools
							<command>docbook2html</command>
							,
							<command>docbook2pdf</command>
							, etc., which use DSSSL transformers to convert to other formats.
						</para>
					</listitem>
					<listitem>
						<para>
							<command>xmlto.sh</command>
							uses the tool
							<command>xmlto</command>
							, which uses XSL transformers to convert to other formats.
						</para>
					</listitem>
					<listitem>
						<para>
							<command>dblatex.sh</command>
							uses the tool
							<command>dblatex</command>
							, which converts first from DocBook to LaTeX format using XSL transformers, and then from LaTeX to other formats.
						</para>
					</listitem>
				</itemizedlist>
			</para>
			<para>
				The usage of these scripts is:
				<screen><![CDATA[bash$ ./docbook2.sh 
Usage: ./docbook2.sh book_id [ html | rtf | pdf | ps | tex | txt ] [lng]

bash$ ./xmlto.sh 
Usage: ./xmlto.sh book_id [ html | html1 | pdf | ps | txt ] [lng]

bash$ ./dblatex.sh 
Usage: ./dblatex.sh book_id [pdf | ps | tex] [lng]]]></screen>
				So, they take the book_id as the first parameter, then the format to convert to, and then the language of the
				document (default is
				<emphasis>en</emphasis>
				). The input XML file that is used by these commands is
				<filename>formats/book_id/lng/xml/book_id.xml</filename>
				. The output is placed in
				<filename>formats/book_id/lng/format/</filename>
				.
			</para>
		</section>
		<section id="downloads">
			<title>Creating Downloadable Files</title>
			<para>
				Downloadable files (which can be downloaded on the left side of the application), are stored in the folder
				<filename>downloads/tar_gz/book_id/lng/</filename>
				for each book. They are compressed archives of various formats and their name follows the pattern
				<filename>book_id.lng.fmt.tar.gz</filename>
				. These archives are generated automatically by the script
				<command>make-all-downloads.sh</command>
				. This script calls
				<command>make-downloads.sh</command>
				for each book and each language.
				<command>make-downloads.sh</command>
				first converts to other formats and then creates the archives.
				<screen>
					<prompt>bash$</prompt>
					<command>downloads/make-downloads.sh</command>
					Usage: downloads/make-downloads.sh book_id [lng]
				</screen>
			</para>
			<para>
				Since generating different formats for a book takes a lot of time,
				<command>make-all-downloads.sh</command>
				does not do it unless the book has been updated (has some changes from the last time that the formats and downloads
				were generated). How does it understand that the book has been updated? The script compares the modification times
				of the source files and the downloadables, and regenerates the downloadables only if the source files are newer.
			</para>
			<para>
				<command>make-all-downloads.sh</command>
				can also be called from a cron job, every night or every week, to update the downloadables.
			</para>
		</section>
	</chapter>
	<chapter id="reading">
		<title>Reading the Documents</title>
		<para>It is almost obvious how to use the application to read the books and articles, however I am writing a few lines
			for the sake of completeness. </para>
		<para>
			First you select a book or article from the menu on the left and the application displays the Table of Contents of
			this book. Then you can select a node of the book (chapter, section, etc.) from the TOC. The content of the node is
			displayed, and a list of subnodes after it (if there are any subnodes). You can also navigate with the buttons
			<emphasis>next</emphasis>
			,
			<emphasis>previous</emphasis>
			,
			<emphasis>up</emphasis>
			and
			<emphasis>home</emphasis>
			. To link to a node directly, use
			<emphasis>xref.php?mode/book_id/sect_id/lng</emphasis>
			, where
			<emphasis>mode</emphasis>
			,
			<emphasis>sect_id</emphasis>
			and
			<emphasis>lng</emphasis>
			can be optional. If
			<emphasis>mode</emphasis>
			is missing, the default value is
			<emphasis>view</emphasis>
			; other possible values of mode are:
			<emphasis>edit</emphasis>
			,
			<emphasis>admin</emphasis>
			and
			<emphasis>approve</emphasis>
			.
		</para>
		<para>Multiple languages are supported in multiple (two) dimensions. The first way of supporting multiple languages is
			that the application can be in several languages. The language of the application can be changed by clicking at the
			flag-like buttons at the right-top of the page. This will change the language of the buttons, messages, etc.,
			everything except the content. </para>
		<para>The second way of supporting multiple laguages is that each book or article can be in several languages. In this
			case, the listbox at the top of the content (near the navigation buttons) will list all the languages in which this
			book is available. Selecting one language from the listbox will change the language of the book to this one. So, only
			the content will be switched to the selected language and the rest of the application will stay the same. </para>
		<para>
			On the left side there are available for download other formats of the book. If you click on one of them, then you
			will get the selected format of the current book in the current language. Sometimes it is a compressed archive like
			this:
			<filename>book_id.lng.fmt.tar.gz</filename>
			and it may contain additional auxiliary files that are needed to display the format properly (such as CSS
			stylesheets), or several copies of the format, generated by different tools, so that you can choose which one you
			prefer. Note that there are also
			<emphasis>Media Files</emphasis>
			available for download. These are the images that are used in the book.
		</para>
		<para>
			To search for a word, type it in the search input box and press ENTER or click the button
			<emphasis>Search</emphasis>
			. A list of sections that contain this word will be displayed. This is a paged list, where each page contains up to
			20 search results and the rest of the search results can be accessed by using the buttons
			<emphasis>Next&gt;</emphasis>
			,
			<emphasis>Last&gt;&gt;</emphasis>
			,
			<emphasis>&lt;Prev</emphasis>
			and
			<emphasis>&lt;&lt;First</emphasis>
			(these buttons may not be present if there are no further results to be displayed). The search term is diplayed above
			the list so that it can be modified and the search repeated, in order to get more accurate results. The search is
			usually limited only to the current book and the current language, but there are also checkboxes that can enable
			searching in all the books and/or all the languages. The search expression does not need to be a simple one, just a
			word or two; it can be more complicated. To learn more about the rules and the syntax of the search expression, click
			the button
			<emphasis>Help</emphasis>
			(and then
			<emphasis>Back</emphasis>
			to go back to search). If you click the button
			<emphasis>Close Searching</emphasis>
			, then you will go to the last node that you were before starting the search. If the search input box on the left is
			empty and you click
			<emphasis>Search</emphasis>
			, then the last search (in this session) will be done again.
		</para>
	</chapter>
	<chapter id="searching">
		<title>Search Syntax</title>
		<para>
			This section describes the rules and the syntax of the search expressions, which are also described in the
			<emphasis>Help</emphasis>
			of the search.
		</para>
		<itemizedlist>
			<listitem>
				<para>
					<emphasis>linux</emphasis>
					finds all nodes that contain the word linux.
					<emphasis>not server</emphasis>
					finds all the nodes that do not contain the word server.
				</para>
			</listitem>
			<listitem>
				<para>
					The boolean operators that can be use are:
					<emphasis>and</emphasis>
					,
					<emphasis>or</emphasis>
					and
					<emphasis>not</emphasis>
					. Without boolean operators,
					<emphasis>and</emphasis>
					will be assumed. The operators are not case sensitive. These three searches are the same:
					<emphasis>linux server</emphasis>
					,
					<emphasis>server linux</emphasis>
					,
					<emphasis>linux AND server</emphasis>
					. To search for the words 'and', 'or', or 'not', place them in a double quotes.
					<emphasis>"not"</emphasis>
					will search for the word 'not'.
				</para>
			</listitem>
			<listitem>
				<para>
					To search for a phrase in a node use double-quotes to delimit your search terms. You can not use boolean search
					terms inside a phrase. That is:
					<emphasis>vi and emacs</emphasis>
					finds nodes with both words 'vi' and 'emacs', but:
					<emphasis>"vi and emacs"</emphasis>
					finds nodes that have the phrase 'vi and emacs'. A phrase can consist of a single word, so this is how to search
					for the words used as boolean operators:
					<emphasis>vi "and" emacs</emphasis>
					finds nodes that contain all three words, but in any order.
				</para>
			</listitem>
			<listitem>
				<para>
					Parentheses can be used to group searches:
					<emphasis>not (vi and emacs)</emphasis>
					. The result is all nodes that have none or one term, but not both.
				</para>
			</listitem>
			<listitem>
				<para>
					The wildcard (*) is available, however it can only be used at the end of a word.
					<emphasis>install</emphasis>
					only retrieves nodes which contain the given word. On the other hand:
					<emphasis>install*</emphasis>
					retrieves 'installing', 'installation', etc. along with 'install'.
				</para>
			</listitem>
			<listitem>
				<para>
					To limit a search to words found in a tag you prefix the keywords with the name of the tag, followed by the equal
					sign:
					<emphasis>programlisting=bash</emphasis>
					,
					<emphasis>command= (ls or cd)</emphasis>
					,
					<emphasis>tagname = ( (this or that) or "this phrase" )</emphasis>
					. It is not necessary to have spaces at either side of the '='. Any DocBook tag can be used, e.g.
					<emphasis>author</emphasis>
					,
					<emphasis>section</emphasis>
					,
					<emphasis>screen</emphasis>
					,
					<emphasis>note</emphasis>
					,
					<emphasis>file</emphasis>
					, etc. In addition, attributes of the tags can be searched as well, e.g.
					<emphasis>section.id=m*</emphasis>
					finds the sections with an id that starts with 'm'.
				</para>
			</listitem>
			<listitem>
				<para>
					To search on a word that contains a '=', precede the '=' with a '\' (backslash):
					<emphasis>test = x\=4 or y\=5</emphasis>
					. This query returns the nodes where the word 'x=4' is associated with the tag 'test' or that contains the word
					'y=5' not associated with any tag.
				</para>
			</listitem>
			<listitem>
				<para>
					Tag search and plain search can be mixed in a single query:
					<emphasis>tag1 = (a1 or a4) not (a3 and a7)</emphasis>
					. This query will retrieve all the nodes in which 'a1' or 'a2' are found in the tag 'tag1' and that do not contain
					the words 'a3' and 'a7', where 'a3' and 'a7' are not associated to any tag.
				</para>
			</listitem>
		</itemizedlist>
	</chapter>
	<chapter id="editing">
		<title>Editing</title>
		<para />
		<section id="edit_overview">
			<title>General Overview</title>
			<para>
				Edit mode of the application is enabled if
				<filename>edit.php</filename>
				is used as an entry to the application. Editors have to authenticate themselves with a username and password when
				they access
				<ulink url="edit.php" />
				for the first time. In the
				<emphasis>edit</emphasis>
				mode, the application looks almost the same as in the
				<emphasis>view</emphasis>
				mode, except that there may be some extra buttons (
				<emphasis>Edit</emphasis>
				and
				<emphasis>Approve</emphasis>
				) near the navigation icons, on the top. These buttons are available only on the nodes where the user has access
				rights, and their color changes depending on the state of the node. By clicking them the user can access the
				<emphasis>Edit</emphasis>
				and
				<emphasis>Approve</emphasis>
				interfaces.
			</para>
			<para>So, editing is done by first navigating to the node that has to be modified, and then going to the edit
				interface of this node. After modifying the content of a node, the user can switch to the view interface again to
				see how it looks, and if he has approve rights, then he can go to the approve interface and approve the last
				modification, otherwise somebody that has approve rights (maybe an admin) has to review and approve it. Only after
				it is approved, the modification becomes visible in the public copy, so that anybody can see it. </para>
		</section>
		<section id="edit_rights">
			<title>Edit Rights</title>
			<para>
				The editors are registered by the
				<emphasis>superuser</emphasis>
				, but they can change their password and personal data themselves in the admin interface (see
				<xref linkend="my_settings" />
				). The superuser also gives some editors the right to administrate some books. Each book should have at least one
				admin.
			</para>
			<para>
				The admin of the book can give edit rights on the book to other users. For each node of the book there may be
				several users that can edit or approve it (have
				<emphasis>edit</emphasis>
				and/or
				<emphasis>approve</emphasis>
				rights on it). The admin of a book can edit or approve all the nodes of the book, by default (without needing to
				have further access rights on the book). The superuser is considered to be an admin of each book.
			</para>
			<para>If the admin allows a user to edit a certain node, than he can edit all the subnodes in the branch as well,
				unless it is explicitly denyed for any subnode. The same is true for approve rights as well. </para>
			<para>
				If the user has edit or approve rights on a node, then the
				<emphasis>Edit</emphasis>
				or
				<emphasis>Approve</emphasis>
				buttons appear on that node, otherwise they don't appear. If the node has no changes to be approved, then the
				<emphasis>Approve</emphasis>
				button appears in a dim color. This dim color is like green, if the status of the node is imported (not modified
				since it was first imported), like blue if the status of the node is synchronized (it has been approved at least
				once), or red if the status is 'added'. If the node is locked for edit or approve by somebody else, then both
				buttons will appear dim.
			</para>
		</section>
		<section id="svn_integration">
			<title>Integration with Subversion</title>
			<para>The book (in the exploded XML format) is stored in Subversion. There is one public copy of the book that is
				checked out from svn, and one edit copy. All the modifications are done first in the edit copy, and after they are
				approved they are commited to svn and are updated in the public copy. </para>
			<para>
				The public copy of the book can be fixed at a certain revision or date. After that, the modifications in the
				workspace will not be published immediately, even when they are approved. Since it is not easy to remember certain
				dates or revision numbers, the tags can be created, to label a certain revision or date, and to mark important
				points in the development of the document. E.g. a tag can be created for each release of the program, if the
				document is the documentation of a program. Then the tags can be selected conveniently from the list. These can be
				done from the
				<emphasis>Admin</emphasis>
				interface of the book (see
				<xref linkend="book_admin" />
				), which is available from the Table Of Contents of the book and can be accessed only by the admins of the book.
			</para>
		</section>
		<section id="approving">
			<title>Approving</title>
			<para>
				Each user can see a list of the modifications that he can approve (according to his access rights). They can see it
				in the interface
				<emphasis>My Settings</emphasis>
				(see
				<xref linkend="my_settings" />
				). Admins can see in
				<emphasis>My Settings</emphasis>
				all the modifications, since they have approve rights in the whole book. Also, a list of all the modifications done
				to the book can be seen in the
				<emphasis>Admin</emphasis>
				interface of the book (see
				<xref linkend="book_admin" />
				).
			</para>
			<para>
				In the approve interface, the user can view the differences with the public version (generated by
				<command>svn diff</command>
				on the node) and a list of the modified files (generated by
				<command>svn status</command>
				on the node). The lines highlighted in red are the ones that are deleted and the ones highlighted in green are the
				lines that are added instead of them. Then he has two options, either to
				<emphasis>Revert</emphasis>
				(undo, reject) the modifications, or to
				<emphasis>Commit</emphasis>
				(publish, accept) them. After the modifications are committed they will become available in the public copy of the
				document.
			</para>
			<para>
				The revert and commit can also be recursive, if the respective
				<emphasis>Recursive</emphasis>
				checkbox is checked. In this case, all the subnodes of the current node will be rejected/approved as well. When
				committing, a log message can be written as well, which can describe the modifications that were done, the reason
				why they were approved, etc.
			</para>
			<para>
				In the approve interface you can see also the previous versions of the node, selected by tag, by revision number or
				by date. The log (note) of the selected (previous) revision can be seen as well, and how it is different from the
				current version. Then you have the option to replace the current node with the selected old version, by clicking the
				button
				<emphasis>Save</emphasis>
				.
			</para>
		</section>
		<section id="structure">
			<title>Modifying Structure</title>
			<para>The structure of a book can be changed by adding a node, deleting a node, changing the order of the subnodes,
				changing the id of a node etc. These changes can be done only by an admin. Since they are done by an admin, they
				don't need approving but instead are committed immediatly. </para>
			<note>
				<para>Actually there are also technical difficulties to do them in two steps (first do them and then commit), so
					when they are done, they are also commited (and they are applied to all the languages as well).</para>
			</note>
			<para>
				The subnodes of a section can be either all of the type
				<emphasis>section</emphasis>
				, or all of the type
				<emphasis>simplesect</emphasis>
				. When the first subnode is added, a checkbox named 'simplesect' is displayed as well besides the
				<emphasis>id</emphasis>
				and the
				<emphasis>title</emphasis>
				of the subnode. If this is checked, then the new subnode (and all its siblings) will be of the type 'simplesect',
				otherwise they will be of the type 'section'. Nodes of type
				<emphasis>simplesect</emphasis>
				cannot have child nodes. They are handled somehow differently from the sections in docbookwiki as well.
			</para>
		</section>
		<section id="concurency">
			<title>Concurrent Editing</title>
			<para>Since a node may have more than one editor that has the right to edit it, it is possible that two editors start
				to edit the same node at almost the same time. All the editors use the same workspace for editing, so these two
				editors are going to save the changes to the same file. In this case, the last one to save the changes will
				overwrite the changes of the first one. </para>
			<para>
				To avoid this unpleasant situation, the editors can lock the node before starting to edit, and unlock it after they
				are done. In this case the other editors cannot access the edit and approve interface of the node, and the color of
				the buttons
				<emphasis>Edit</emphasis>
				and
				<emphasis>Approve</emphasis>
				is dim, to show that it is locked.
			</para>
			<para>But it is also possible that after somebody has locked a node, he forgets to unlock it. To avoid this, the lock
				has a timeout of 15 minutes. Each time that the editor saves the node, the timeout is restarted. After the timeout
				expires, the node is automatically unlocked and the others can edit it. </para>
			<para>However, it is not necessary to lock the node, if you are sure that no concurrent editing can happen, e.g. you
				are the only editor of the book (maybe admin of the book), or the edit rights of the editors do not overlap with
				each-other (so that each node can be edited by only one editor). </para>
			<para>Another dangerous situation is when two admins of the book try to change its structure simultaneously (since a
				book may have more than one admin). The results in this case may be unpredictable. The application takes care of
				this internally by not allowing such a concurrency. It uses a lock to serialize these actions, and a requested
				change is not started until the book is unlocked and it can lock it. </para>
		</section>
		<section id="book_admin">
			<title>Admin Interface</title>
			<para>Each book (in each language) has a separate interface that can be used for its administration. This can be
				accessed only by the admins of the book and is available at the Table Of Contents (root node). </para>
			<para>In this interface, the public copy of the book can be fixed at a certain revision or date. After that, the
				modifications in the workspace will not be published immediately, even when they are approved. </para>
			<para>Since it is not easy to remember certain dates or revision numbers, the tags can be used, to label a certain
				revision or date, and to mark important points in the development of the document. E.g. a tag can be created for
				each release of the program, if the document is the documentation of a program. </para>
			<para>To create a tag for a certain version of the document, first fix the book to this version (by revision number
				or by date), and then create a new tag for it, which is like a label for it. Then the tags can be selected
				conveniently from the list of tags. </para>
			<para>In this interface there are also buttons that can be used to update the downloadables of the book and to update
				the search index. The downloadables are updated only for the current book and language, while the search indexes are
				regenerated for all the books and languages. </para>
			<para>Another usefull thing in this interface is the list of the nodes of the book that have been modified and need
				to be reviewed/approved/cancelled. Clicking on one of them opens the approve interface for that node. </para>
		</section>
		<section id="webnotes">
			<title>Notes/Comments</title>
			<para>
				Each user can add notes or comments, however they need to be approved first before they are enlisted in the page.
				They can be approved by a user that has
				<emphasis>Approve</emphasis>
				rights on the section (including the admins of the book). They can also be edited and modified first, before being
				approved. Only the admins of the book have the right to delete any notes.
			</para>
		</section>
	</chapter>
	<chapter id="edit_modes">
		<title>Edit Modes</title>
		<para />
		<section id="text">
			<title>Text/Wiki</title>
			<para>This edit mode consists of light (short) markups of text which have a certain meaning by convention. They are
				easy to be remembered and easy to be used by the editors (can be typed quickly), but maybe not so easy to be parsed.
				They cover only a tiny subset of DocBook tags and DTD, but usually this is enough for writing quickly a good DocBook
				document. </para>
			<section id="text_conventions">
				<title>Markup Conventions</title>
				<itemizedlist>
					<listitem>
						<para>
							<emphasis>Paragraph</emphasis>
							is delimited by empty lines. It can contain
							<emphasis>blocks</emphasis>
							or
							<emphasis>lists</emphasis>
							as well (which can have empty lines inside them).
						</para>
					</listitem>
					<listitem>
						<para>
							<emphasis>Lists</emphasis>
							are denoted by bullets and indentation. Bullets can be: ( * | 1. | a. | A. | i. | I. ). The items of the same
							list have the same bullet and indentation. A list item can contain sublists, blocks, empty lines, etc. A slash
							(/) is used to end a list, if there is ambiguity.
						</para>
					</listitem>
					<listitem>
						<para>
							<emphasis>Blocks</emphasis>
							are denoted by a starting line (--xxx) and an ending line (----). Blocks are:
							<itemizedlist>
								<listitem>
									<para>programlisting (--code), literallayout (--ll), screen (--scr) </para>
								</listitem>
								<listitem>
									<para>figure (--fig title), example (--xmp title) </para>
								</listitem>
								<listitem>
									<para>admonitions: --n or --note, --c or --caution, --w or --warning, --tip, --imp or --important, (they can
										also have a title). </para>
								</listitem>
							</itemizedlist>
						</para>
					</listitem>
					<listitem>
						<para>
							Inline marks are denoted by special characters and are contained inside a single line (cannot span multiple
							lines). They are:
							<itemizedlist>
								<listitem>
									<para>Links: [link_name &gt; href] </para>
								</listitem>
								<listitem>
									<para>xref: [&gt; section_id ] </para>
								</listitem>
								<listitem>
									<para>Footnotes: [/...] </para>
								</listitem>
								<listitem>
									<para>Menu items: [Options-&gt;General-&gt;Save (Ctrl-S)] </para>
								</listitem>
								<listitem>
									<para>
										Prompt and command are separated by '!#' in a single line:
										<emphasis>prompt!# command</emphasis>
										(escaped like this '\!#')
									</para>
								</listitem>
								<listitem>
									<para>
										As a special case, the lines that start with
										<emphasis>bash$</emphasis>
										or
										<emphasis>bash#</emphasis>
										are treated as command lines, so there is no need to use '!#'.
									</para>
								</listitem>
								<listitem>
									<para>Filename: ~filename~, emphasis: _word_, command: `cmd` </para>
								</listitem>
								<listitem>
									<para>Images: [&lt; filename &lt; width &lt; alt ] </para>
								</listitem>
								<listitem>
									<para>Special chars can be escaped by a slash, like this: \~, \_, \`, \&lt;, \&gt; </para>
								</listitem>
								<listitem>
									<para>Square brackets ([...]) can be escaped like this: (\[...]). </para>
								</listitem>
								<listitem>
									<para>
										CDATA sections are denoted by [[xyz]]. This markup can be escaped by preceding it by \ (like \[[xyz]]). As a
										shortcut,
										<literallayout class="normal"><![CDATA[ --code--
 xyz
 ----]]></literallayout>
										is equivalent to:
										<literallayout class="normal"> -- code
											[[xyz]]
											-- --</literallayout>
										The same can be done for --scr and --ll.
									</para>
								</listitem>
							</itemizedlist>
						</para>
					</listitem>
					<listitem>
						<para>
							In bookinfo and articleinfo editing, these keywords can be used (at the begining of a line):
							<itemizedlist>
								<listitem>
									<para>@author: Surname, Firstname, email@example.org, [ORGNAME&gt;http://www.orgname.org] </para>
								</listitem>
								<listitem>
									<para>@abstract: The book or article abstract. (Can take several lines). </para>
								</listitem>
								<listitem>
									<para>@keywords: GNU/Linux, DocBookEasy, </para>
								</listitem>
								<listitem>
									<para>@copyright: Copyright (C) 2005 Firstname Lastname. Permission is granted to copy, distribute and/or
										modify this document under the terms of the GNU Free Documentation License, Version 1.1 or any later version
										published by the Free Software Foundation; with no Invariant Sections, with no Front-Cover Texts, and with no
										Back-Cover Texts. A copy of the license is included in the section entitled "GNU Free Documentation License." </para>
								</listitem>
							</itemizedlist>
						</para>
					</listitem>
				</itemizedlist>
			</section>
			<section id="text_structure">
				<title>The Structure of the Text</title>
				<para>The structure of the text/wiki is like this: </para>
				<literallayout class="normal"># Text --&gt; Info | (Paragraph | List | Block)*

					# Paragraph --&gt; (NonEmptyLine | List | Block)+

					# List --&gt; (ListItem)+ EndListLine
					EndListLine --&gt; '/'

					# ListItem --&gt; StartItemLine ListItemText
					StartItemLine --&gt; ListItemMark Line
					ListItemMark --&gt; Indentation Bullet
					Bullet --&gt; ('*' | '1.' | 'a.' | 'i.')
					Line --&gt; EmptyLine | NonEmptyLine
					ListItemText --&gt; (Line | List | Block)*

					# Block --&gt; StartBlockLine (Line | List | Block)* EndBlockLine
					EndBlockLine --&gt; '----'
					StartBlockLine --&gt; '--code' | '--scr' | '--ll'
					| '--fig title' | '--xmp title'
					| '--n' | '--note' | '--c' | '--caution' | '--tip'
					| '--w' | '--warning' | '--imp' | '--important'

					# Info --&gt; Author* Abstract Keywords? Copyright
					Author --&gt; '@author:' surname ',' firstname ',' email ',' orgname
					Abstract --&gt; '@abstract:' text
					Keywords --&gt; '@keywords:' (Keyword ',')*
					Copyright --&gt; '@copyright:' text</literallayout>
				<para>All the items of the same list have the same identation and the same bullet. A nested list is indented more
					than the containing list item. A slash (/) is required to denote the end of the list only when there is ambiguity,
					otherwise it is optional. The admonitions (note,warning, etc.) can also have a title (optionally). The keywords of
					the Info (@author:, @abstract:, @keywords:, @copyright:) must start at the begining of the line. </para>
			</section>
			<section id="text_examples">
				<title>Examples</title>
				<para />
				<section id="xmp_para_inline">
					<title>Paragraphs and Inline Markups</title>
					<itemizedlist>
						<listitem>
							<para>
								<programlisting>
                  <![CDATA[This is a paragraph.

Paragraphs are delimited by empty lines.]]>
								</programlisting>
							</para>
						</listitem>
						<listitem>
							<para>
								<programlisting>
                  <![CDATA[Paragraphs can contain lists or blocks
--scr
bash$ ls -al
 ----
* item1
* item2
/
However there should be no empty line separating them.]]>
								</programlisting>
							</para>
						</listitem>
						<listitem>
							<para>
								These are some links:
								<programlisting>[http://www.google.com], [Google &gt; http://www.google.com], [ Empty &gt; ]</programlisting>
								<ulink url="http://www.google.com" />
								,
								<ulink url=" http://www.google.com">Google </ulink>
								,
								<ulink url=" "> Empty </ulink>
							</para>
						</listitem>
						<listitem>
							<para>
								This is a cross reference (kind of link) to another section:
								<programlisting><![CDATA[See also the section HTML Editing Mode ( [>html] )]]></programlisting>
								See also the section HTML Editing Mode (
								<xref linkend="html" />
								)
							</para>
						</listitem>
						<listitem>
							<para>
								This is a footnote:
								<programlisting><![CDATA[Footnote[/Footnotes are explanations that are displayed at the end of the page]]]></programlisting>
								Footnote
								<footnote>
									<para>Footnotes are explanations that are displayed at the end of the page</para>
								</footnote>
							</para>
						</listitem>
						<listitem>
							<para>
								Menu items can be marked like this:
								<programlisting>[Options-&gt;General-&gt;Save (Ctrl-S)]</programlisting>
								<menuchoice>
									<shortcut>
										<keycombo>
											<keycap>Ctrl</keycap>
											<keycap>S</keycap>
										</keycombo>
									</shortcut>
									<guimenu>Options</guimenu>
									<guisubmenu>General</guisubmenu>
									<guimenuitem>Save</guimenuitem>
								</menuchoice>
							</para>
						</listitem>
						<listitem>
							<para>
								Prompts and commands can be denoted like this:
								<programlisting><![CDATA[The command `ls` can be used like this:
--scr
bash$ ls -al
bash# ls -al
prompt\>!# ls -al
 ----]]></programlisting>
								The command
								<command>ls</command>
								can be used like this:
								<screen>
									<prompt>bash$</prompt>
									<command>ls -al</command>
									<prompt>bash#</prompt>
									<command>ls -al</command>
									<prompt>prompt&gt;</prompt>
									<command>ls -al</command>
								</screen>
								Any line that contains '!#' is seen as a 'prompt!# command' line. To use '!#' inside a line, it should be
								escaped by a slash, like this '\!#' .
								<emphasis>bash$</emphasis>
								and
								<emphasis>bash#</emphasis>
								at the begining of a line are reckognized as prompts and the rest of the line is seen as a command. They can be
								escaped (at the begining of a line) by adding a slash before them.
							</para>
						</listitem>
						<listitem>
							<para>Square brackets [...] can be escaped by adding a slash before them: \[...]. Characters that have markup
								meaning, can be escaped by adding a slash before them, like this: \~, \`, \_. Some other special characters can
								also be escaped by a slash: \&lt;, \&lt; </para>
						</listitem>
					</itemizedlist>
				</section>
				<section id="xmp_lists">
					<title>Ordered and Itemized Lists</title>
					<programlisting>
            <![CDATA[* item1

  a. item11

    A. item111

      1. item1111

        * Lists can be nested to any level

  a. item12

  a. item13

* item2

  1. item21
--scr 
bash$ ls -al
List items can also contain blocks
 ----

  1. item22

  1. item23
  /

This line belongs to _item2_ , not to _item23_ , because the list is closed by the slash in the line above.

* item3

  I. item31

  I. item32

  I. item33]]>
					</programlisting>
					<itemizedlist>
						<listitem>
							<para>
								item1
								<orderedlist numeration="loweralpha" inheritnum="ignore" continuation="restarts">
									<listitem>
										<para>
											item11
											<orderedlist numeration="upperalpha" inheritnum="ignore" continuation="restarts">
												<listitem>
													<para>
														item111
														<orderedlist numeration="arabic" inheritnum="ignore" continuation="restarts">
															<listitem>
																<para>
																	item1111
																	<itemizedlist>
																		<listitem>
																			<para>Lists can be nested to any level </para>
																		</listitem>
																	</itemizedlist>
																</para>
															</listitem>
														</orderedlist>
													</para>
												</listitem>
											</orderedlist>
										</para>
									</listitem>
									<listitem>
										<para>item12 </para>
									</listitem>
									<listitem>
										<para>item13 </para>
									</listitem>
								</orderedlist>
							</para>
						</listitem>
						<listitem>
							<para>
								item2
								<orderedlist numeration="arabic" inheritnum="ignore" continuation="restarts">
									<listitem>
										<para>
											item21
											<screen>
												<prompt>bash$</prompt>
												<command>ls -al</command>
												List items can also contain blocks
											</screen>
										</para>
									</listitem>
									<listitem>
										<para>item22 </para>
									</listitem>
									<listitem>
										<para>item23 </para>
									</listitem>
								</orderedlist>
								This line belongs to
								<emphasis>item2</emphasis>
								, not to
								<emphasis>item23</emphasis>
								, because the list is closed by the slash in the line above.
							</para>
						</listitem>
						<listitem>
							<para>
								item3
								<orderedlist numeration="upperroman" inheritnum="ignore" continuation="restarts">
									<listitem>
										<para>item31 </para>
									</listitem>
									<listitem>
										<para>item32 </para>
									</listitem>
									<listitem>
										<para>item33 </para>
									</listitem>
								</orderedlist>
							</para>
						</listitem>
					</itemizedlist>
				</section>
				<section id="xmp_blocks">
					<title>Blocks and Admonitions</title>
					<itemizedlist>
						<listitem>
							<para>
								<programlisting>--note Note Title
									This is a note.
									----
								</programlisting>
								<note>
									<title>Note Title</title>
									<para>This is a note.</para>
								</note>
							</para>
						</listitem>
						<listitem>
							<para>
								<programlisting>--caution
									This is a caution. The title for admonitions is optional.
									----
								</programlisting>
								<caution>
									<para>This is a caution. The title for admonitions is optional.</para>
								</caution>
							</para>
						</listitem>
						<listitem>
							<para>
								<programlisting>--warning
									This is a warning.
									----
								</programlisting>
								<warning>
									<para>This is a warning.</para>
								</warning>
							</para>
						</listitem>
						<listitem>
							<para>
								<programlisting>--tip
									This is a tip.
									----
								</programlisting>
								<tip>
									<para>This is a tip.</para>
								</tip>
							</para>
						</listitem>
						<listitem>
							<para>
								<programlisting>--imp
									This is important!
									----
								</programlisting>
								<important>
									<para>This is important!</para>
								</important>
							</para>
						</listitem>
						<listitem>
							<para>
								<programlisting>--scr
									bash$ ls -al
									screen is usually used for command line interactions
									----
								</programlisting>
								<screen>
									<prompt>bash$</prompt>
									<command>ls -al</command>
									screen is usually used for command line interactions
								</screen>
							</para>
						</listitem>
						<listitem>
							<para>
								<programlisting>--ll
									literallayout
									preserves
									spaces
									----
								</programlisting>
								<literallayout class="normal">literallayout
									preserves
									spaces</literallayout>
							</para>
						</listitem>
						<listitem>
							<para>
								<programlisting>--code
									programlisting is usually used to show the contents of files
									----
								</programlisting>
								<programlisting>programlisting is usually used to show the contents of files</programlisting>
							</para>
						</listitem>
						<listitem>
							<para>
								<programlisting>--fig This is a figure example

									--scr
									+------+
									| |
									| |
									+------+
									----

									----
								</programlisting>
								<figure float="0">
									<title>This is a figure example</title>
									<screen> +------+
										| |
										| |
										+------+</screen>
								</figure>
							</para>
						</listitem>
						<listitem>
							<para>
								<programlisting>--xmp This is an example example

									--code
									function test()
									{
									}
									----

									----
								</programlisting>
								<example>
									<title>This is an example example</title>
									<programlisting>function test()
										{
										}</programlisting>
								</example>
							</para>
						</listitem>
					</itemizedlist>
				</section>
				<section id="xmp_cdata">
					<title>Parsed Character Data (CDATA)</title>
					<para>More often than not, the content that is included inside --code or --scr blocks is copy/pasted from
						somewhere. In general it contains characters that must be escaped, otherwise they would be treated as wiki markup
						characters. This is usually tedious and error-prone. The solution is to use blocks of CDATA, which start by
						--code--, --scr-- and --ll--. The content of these blocks is taken verbatim and is not parsed for any markups.
						Double square brackets can be used anywhere to denote CDATA (verbatim) content. </para>
					<para>Examples: </para>
					<itemizedlist>
						<listitem>
							<para>
								<programlisting>
                  <![CDATA[--ll--
_emphasized text_ is converted to <emphasis>emphasized text</emphasis>
 ----]]>
								</programlisting>
								<literallayout class="normal">
                  <![CDATA[_emphasized text_ is converted to <emphasis>emphasized text</emphasis>]]>
								</literallayout>
							</para>
						</listitem>
					</itemizedlist>
				</section>
				<section id="bookinfo">
					<title>bookinfo and articleinfo</title>
					<programlisting>
            <![CDATA[@author: Hoxha, Dashamir, dasho@w3-soft.net,  [W3-Soft>http://w3-soft.net] 
@author: , Dashamir, ,  

@abstract: This article will describe the steps to install 
and configure a Slackware Router.

@keywords: linux, slackware, router

@copyright: Copyright (C) 2005 Dashamir Hoxha. Permission is granted to copy, 
distribute and/or modify this document under the terms of the GNU Free 
Documentation License, Version 1.1 or any later version published by the Free 
Software Foundation; with no Invariant Sections, with no Front-Cover Texts, and 
with no Back-Cover Texts. A copy of the license is included in the section 
entitled "GNU Free Documentation License."]]>
					</programlisting>
				</section>
			</section>
		</section>
		<section id="html">
			<title>HTML</title>
			<para>The HTML edit mode uses tags that are similar to HTML tags, but actualy are not HTML tags. They are like
				abreviations of XML/DocBook tags. So, there is a correspondence between the 'HTML' tags used in this mode and
				XML/DocBook tags. They can be used by the people who are familiar with the HTML markup, but not yet familiar with
				DocBook tags. They are also shorter than the corresponding DocBook tags, so it can be more convenient to use them
				even if you know DocBook. </para>
			<section id="html-preformated">
				<title>Preformated Elements</title>
				<para>
					Preformated elements are
					<emphasis>&lt;scr&gt;</emphasis>
					(Screen),
					<emphasis>&lt;ll&gt;</emphasis>
					(LiteralLayout) and
					<emphasis>&lt;code&gt;</emphasis>
					(ProgramListing). The following examples show how they can be used, how they are converted to XML/DocBook, and how
					they are displayed in DocBookEasy:
				</para>
				<itemizedlist>
					<listitem>
						<para>
							<emphasis>&lt;scr&gt;</emphasis>
							(screen):
							<programlisting><![CDATA[<scr>
screen usually displays interaction in a terminal
<pr>bash$</pr> <c>ls -al</c>
</scr>]]></programlisting>
							<programlisting><![CDATA[<screen>
screen usually displays interaction in a terminal
<prompt>bash$</prompt> <command>ls -al</command>
</screen>]]></programlisting>
							<screen>
								screen usually displays interaction in a terminal
								<prompt>bash$</prompt>
								<command>ls -al</command>
							</screen>
						</para>
					</listitem>
					<listitem>
						<para>
							<emphasis>&lt;ll&gt;</emphasis>
							(literallayout):
							<programlisting><![CDATA[<ll>literallayout
      preserves
   spaces
</ll>]]></programlisting>
							<programlisting><![CDATA[<literallayout>literallayout
      preserves
   spaces
</literallayout>]]></programlisting>
							<literallayout class="normal">literallayout
								preserves
								spaces</literallayout>
						</para>
					</listitem>
					<listitem>
						<para>
							<emphasis>&lt;code&gt;</emphasis>
							(programlisting):
							<programlisting><![CDATA[<code>function test()
{
}
</code>]]></programlisting>
							<programlisting><![CDATA[<programlisting>function test()
{
}
</programlisting>]]></programlisting>
							<programlisting>function test()
								{
								}</programlisting>
						</para>
					</listitem>
				</itemizedlist>
			</section>
			<section id="html-lists">
				<title>List Elements</title>
				<para>
					List elements are:
					<emphasis>&lt;ul&gt;</emphasis>
					(ItemizedList),
					<emphasis>&lt;ol&gt;</emphasis>
					(OrderedList),
					<emphasis>&lt;li&gt;</emphasis>
					(ListItem).
					<emphasis>&lt;ol&gt;</emphasis>
					can optionally have a
					<emphasis>type</emphasis>
					attribute with the values ( a | A | i | I ).
				</para>
				<para>
					Example:
					<programlisting><![CDATA[<ol>
  <li>Item1 
    <ul>
      <li>Item11 </li>
      <li>Item12 </li>
    </ul>
  </li>
  <li>Item2 
    <ol type="a">
      <li>Item21 </li>
      <li>Item22 </li>
    </ol>
  </li>
  <li>Item3 
    <ol type="I">
      <li>Item31 </li>
      <li>Item32 </li>
    </ol>
  </li>
</ol>]]></programlisting>
				</para>
				<programlisting>
          <![CDATA[<orderedlist>
  <listitem><para>Item1 
    <itemizedlist>
      <listitem><para>Item11 </para></listitem>
      <listitem><para>Item12 </para></listitem>
    </itemizedlist>
  </para></listitem>
  <listitem><para>Item2 
    <orderedlist numeration="loweralpha">
      <listitem><para>Item21 </para></listitem>
      <listitem><para>Item22 </para></listitem>
    </orderedlist>
  </para></listitem>
  <listitem><para>Item3 
    <orderedlist numeration="upperroman">
      <listitem><para>Item31 </para></listitem>
      <listitem><para>Item32 </para></listitem>
    </orderedlist>
  </para></listitem>
</orderedlist>]]>
				</programlisting>
				<orderedlist numeration="arabic" inheritnum="ignore" continuation="restarts">
					<listitem>
						<para>
							Item1
							<itemizedlist>
								<listitem>
									<para>Item11 </para>
								</listitem>
								<listitem>
									<para>Item12 </para>
								</listitem>
							</itemizedlist>
						</para>
					</listitem>
					<listitem>
						<para>
							Item2
							<orderedlist numeration="loweralpha" inheritnum="ignore" continuation="restarts">
								<listitem>
									<para>Item21 </para>
								</listitem>
								<listitem>
									<para>Item22 </para>
								</listitem>
							</orderedlist>
						</para>
					</listitem>
					<listitem>
						<para>
							Item3
							<orderedlist numeration="upperroman" inheritnum="ignore" continuation="restarts">
								<listitem>
									<para>Item31 </para>
								</listitem>
								<listitem>
									<para>Item32 </para>
								</listitem>
							</orderedlist>
						</para>
					</listitem>
				</orderedlist>
			</section>
			<section id="html-admon">
				<title>Admonitions</title>
				<para>
					Admonitions are:
					<programlisting><![CDATA[<n> (Note), <tip> (Tip), <imp> (Important), <w> (Warning), <caution> (Caution). ]]></programlisting>
					They may optionally have a title.
				</para>
				<para>
					Examples:
					<itemizedlist>
						<listitem>
							<para>
								<programlisting><![CDATA[<n><t>Title</t>
This is a note.
</n>]]></programlisting>
								<programlisting><![CDATA[<note><title>Title</title>
<para>This is a note.</para>
</note>]]></programlisting>
								<note>
									<title>Title</title>
									<para>This is a note.</para>
								</note>
							</para>
						</listitem>
						<listitem>
							<para>
								<programlisting><![CDATA[<tip>This is a tip.</tip>]]></programlisting>
								<programlisting><![CDATA[<tip><para>This is a tip.</para></tip>]]></programlisting>
								<tip>
									<para>This is a tip.</para>
								</tip>
							</para>
						</listitem>
					</itemizedlist>
				</para>
				<para>
					(See also
					<xref linkend="xmp_blocks" />
					)
				</para>
			</section>
			<section id="html-block">
				<title>Other Block Elements</title>
				<para>Other block elements are: </para>
				<programlisting>
          <![CDATA[<p> (Para), <fig> (Figure), <xmp> (Example)]]>
				</programlisting>
				<para>
					The elements
					<emphasis>fig</emphasis>
					and
					<emphasis>xmp</emphasis>
					require a title as well.
				</para>
				<para>
					Examples:
					<itemizedlist>
						<listitem>
							<para>
								<programlisting><![CDATA[<p>Paragraph</p>]]></programlisting>
								<programlisting><![CDATA[<para>Paragraph</para>]]></programlisting>
								Paragraph
							</para>
						</listitem>
						<listitem>
							<para>
								<programlisting><![CDATA[<fig><t>Title</t>
<scr>
 +---+
 |   |
 +---+
</scr>
</fig>]]></programlisting>
								<programlisting><![CDATA[<figure><title>Title</title>
<screen>
 +---+
 |   |
 +---+
</screen>
</figure>]]></programlisting>
								<figure float="0">
									<title>Title</title>
									<screen> +---+
										| |
										+---+</screen>
								</figure>
							</para>
						</listitem>
						<listitem>
							<para>
								<programlisting><![CDATA[<xmp><t>Title</t>
<code>function test() {}</code>
< /xmp>]]></programlisting>
								<programlisting><![CDATA[<example><title>Title</title>
<programlisting>function test() {}</programlisting>
</example>]]></programlisting>
								<example>
									<title>Title</title>
									<programlisting>function test() {}</programlisting>
								</example>
							</para>
						</listitem>
					</itemizedlist>
				</para>
			</section>
			<section id="html-inline">
				<title>Inline Elements</title>
				<para>
					Inline elements that are reckognized are:
					<emphasis>&lt;fn&gt;</emphasis>
					(footnote),
					<emphasis>&lt;a&gt;</emphasis>
					(ulink),
					<emphasis>&lt;pr&gt;</emphasis>
					(prompt),
					<emphasis>&lt;c&gt;</emphasis>
					(command),
					<emphasis>&lt;o&gt;</emphasis>
					(option),
					<emphasis>&lt;app&gt;</emphasis>
					(application),
					<emphasis>&lt;f&gt;</emphasis>
					(filename),
					<emphasis>&lt;co&gt;</emphasis>
					(computeroutput),
					<emphasis>&lt;ui&gt;</emphasis>
					(userinput),
					<emphasis>&lt;r&gt;</emphasis>
					(replaceable),
					<emphasis>&lt;tm&gt;</emphasis>
					(trademark),
					<emphasis>&lt;ft&gt;</emphasis>
					(firstterm),
					<emphasis>&lt;acr&gt;</emphasis>
					(acronym),
					<emphasis>&lt;waw&gt;</emphasis>
					(wordasword),
					<emphasis>&lt;em&gt;</emphasis>
					(emphasis). If a tag is not reckognized, it will be copied untouched, so other docbook tags can be used as well.
				</para>
				<para>Examples: </para>
				<programlisting>
          <![CDATA[<p>
-- word<fn><p>Footnote explanation</p></fn>
-- <a href=" http://www.google.com">Google </a>
-- <c>ls <o>-al</o></c>
-- <f>file.txt</f>
-- <acr>GPL</acr>
-- <em>emphasized words</em>
</p>]]>
				</programlisting>
				<programlisting>
          <![CDATA[<para>
-- word<footnote><para>Footnote explanation</para></footnote>
-- <ulink url=" http://www.google.com">Google </ulink>
-- <command>ls <option>-al</option></command>
-- <filename>file.txt</filename>
-- <acronym>GPL</acronym>
-- <emphasis>emphasized words</emphasis>
</para>]]>
				</programlisting>
				<para>
					-- word
					<footnote>
						<para>Footnote explanation</para>
					</footnote>
					--
					<ulink url=" http://www.google.com">Google </ulink>
					--
					<command>
						ls
						<option>-al</option>
					</command>
					--
					<filename>file.txt</filename>
					--
					<acronym>GPL</acronym>
					--
					<emphasis>emphasized words</emphasis>
				</para>
			</section>
			<section id="html-gui">
				<title>GUI Elements</title>
				<para>
					The GUI elements are:
					<emphasis>&lt;gl&gt;</emphasis>
					(guilabel),
					<emphasis>&lt;gb&gt;</emphasis>
					(guibutton),
					<emphasis>&lt;gi&gt;</emphasis>
					(guiicons),
					<emphasis>&lt;gm&gt;</emphasis>
					(guimenu),
					<emphasis>&lt;gmi&gt;</emphasis>
					(guimenuitem),
					<emphasis>&lt;k&gt;</emphasis>
					(keycap),
					<emphasis>&lt;kc&gt;</emphasis>
					(keycombo),
					<emphasis>&lt;mch&gt;</emphasis>
					(menuchoice),
					<emphasis>&lt;shc&gt;</emphasis>
					(shortcut).
				</para>
				<para>Example: </para>
				<programlisting>
          <![CDATA[<p>
<mch>
  <shc><kc><k>Ctrl</k><k>I</k></kc></shc>
  <gm>menu</gm><guisubmenu>submenu</guisubmenu><gmi>item</gmi>
</mch> 
</p>]]>
				</programlisting>
				<programlisting>
          <![CDATA[<para>
<menuchoice>
  <shortcut>
    <keycombo><keycap>Ctrl</keycap><keycap>I</keycap></keycombo>
  </shortcut>
  <guimenu>menu</guimenu>
  <guisubmenu>submenu</guisubmenu>
  <guimenuitem>item</guimenuitem>
</menuchoice> 
</para>]]>
				</programlisting>
				<para>
					<menuchoice>
						<shortcut>
							<keycombo>
								<keycap>Ctrl</keycap>
								<keycap>I</keycap>
							</keycombo>
						</shortcut>
						<guimenu>menu</guimenu>
						<guisubmenu>submenu</guisubmenu>
						<guimenuitem>item</guimenuitem>
					</menuchoice>
				</para>
			</section>
			<section id="html-img">
				<title>Images</title>
				<para>
					Images (mediaobject, imageobject, imagedata, etc.) are marked by the
					<emphasis>&lt;img&gt;</emphasis>
					tag:
				</para>
				<programlisting>
          <![CDATA[<img src="diagram.png" width="269" align="right" title="Diagram" 
alt="This text explains what this picture is about.
     It is displayed also if the picture is missing." />]]>
				</programlisting>
				<programlisting>
          <![CDATA[<mediaobject>
  <imageobject>
    <imagedata fileref="diagram.png" width="269" align="right"/>
  </imageobject>
  <textobject>
    <phrase>This text explains what this picture is about. 
            It is displayed also if the picture is missing.</phrase>
  </textobject>
  <caption>
Diagram
</caption>
</mediaobject>]]>
				</programlisting>
				<para>
					<mediaobject>
						<imageobject>
							<imagedata fileref="media/edit_modes/html/html-img/diagram.png" align="center" />
						</imageobject>
						<textobject>
							<phrase>This text explains what this picture is about. It is displayed also if the picture is missing.</phrase>
						</textobject>
					</mediaobject>
				</para>
			</section>
		</section>
		<section id="xml">
			<title>XML/DocBook</title>
			<para>
				In this editing mode, plain
				<emphasis>XML/DocBook</emphasis>
				is used. It is usefull to check what XML/DocBook code the other editing modes produce, and also in case that you
				want to use any special tags that may be not supported by the other editing modes.
			</para>
		</section>
		<section id="latex">
			<title>Latex</title>
			<para>
				The basic idea is to use for editing a markup similar to
				<emphasis>LaTeX</emphasis>
				markup, for those who are familiar with it and for some kinds of editing where
				<emphasis>LaTeX</emphasis>
				shines, e.g. for editing mathematical formulas.
			</para>
			<para>This editing mode is not implemented yet. </para>
		</section>
		<section id="texi">
			<title>Texi (Info)</title>
			<para>
				The basic idea is to use the
				<emphasis>texinfo</emphasis>
				markup for editing.
			</para>
			<para>This editing mode is not implemented yet. </para>
		</section>
		<section id="wysiwyg">
			<title>wysiwyg</title>
			<para>
				This is about integrating any wysiwyg JavaScript editor in DocBookEasy. See for example this one:
				<ulink url="http://tinymce.moxiecode.com/" />
				. There may be others as well. However I am not sure whether this mode is suitable for editing XML documents.
			</para>
		</section>
	</chapter>
	<chapter id="administrating">
		<title>Administrating</title>
		<para>
			The administrating interface of the system can be accessed by opening
			<ulink url="admin.php" />
			in browser. It can be accessed by the superuser and any other user, after they have been authenticated with username
			and password. However they have different interfaces.
		</para>
		<itemizedlist>
			<listitem>
				<para>The superuser has an interface for adding and removing users of the system and for modifying the books menu.
					He has also an interface for importing/creating new books in the system, or for deleting them. </para>
			</listitem>
			<listitem>
				<para>A user that is not admin of any book will just have an interface for his settings, his name, email and
					password, etc. In this interface he can also see the edit rights, and a list of the modified nodes that he can
					approve. </para>
			</listitem>
			<listitem>
				<para>A user that is also admin of some books will have an interface for managing the edit rights on these books, in
					addition to the interface of his settings. </para>
			</listitem>
		</itemizedlist>
		<section id="users">
			<title>Users</title>
			<para>
				This interface can be accessed only by the superuser. It has a list of all the users that have access on the system
				(can login into
				<ulink url="edit.php" />
				and
				<ulink url="admin.php" />
				with a username and password). This list can be filtered by username, name, email, etc. A user can be selected from
				the list and for the selected user it displays the profile (username, name, email), the books which he can
				administrate, and the edit rights of the user in the system. The superuser can reset the password of a user and he
				can also delete them or add new users. He can also change the admin list of the user, but he cannot change the edit
				rights of the user (which books and which nodes he can edit or approve); they are just displayed so that the
				superuser has an idea about them.
			</para>
		</section>
		<section id="menus">
			<title>Book Menus</title>
			<para>This interface is a GUI for modifying the menu of books that is displayed on the left, and it is available only
				to the superuser. </para>
			<para>
				It allows to add new items, to change the order of the items, to delete items, to change their id or caption, etc.
				It also possible to copy one or more items in the clipboard, and then to paste them to another item (they will be
				appended at the list of subitems of the selected item). The copy/paste functionality is
				<emphasis>deep</emphasis>
				, which means that all the branch is copied.
			</para>
			<caution>
				<para>
					The
					<emphasis>delete</emphasis>
					is also deep, all the branch is deleted, so be carefull. In case of a fatal mistake, you can cancel all the
					changes.
				</para>
			</caution>
			<para>The button "Apply Changes" copies the modified version of the menu to the one that is used by the application,
				and the button "Cancel Changes" discards all the changes by copying the application menu to the one that is being
				edited. </para>
			<tip>
				<para>For the items of the menu that are not books or articles (but are categories/subcategories), the bookid should
					be left empty.</para>
			</tip>
		</section>
		<section id="add_book">
			<title>Adding New Books</title>
			<para>
				The books of the docbookwiki system can be maintained by the scripts
				<command>import.sh</command>
				and
				<command>clean.sh</command>
				. However there is also a web interface for doing it (which basically calls these two scripts). This interface is
				available only for the superuser. In this interface the superuser can create from scratch a new book/article, or he
				can import an existing document.
			</para>
			<para>
				To create a new document, the superuser gives the book id, the language of the document, selects whether it is a
				book or an article, gives the name and email of the author, the keywords, the title of the document, writes an
				abstract, and then cliks the button
				<emphasis>Create</emphasis>
				.
			</para>
			<para>
				To import an existing document it has to be uploaded first. Besides the XML file , a document can also have media
				files (images etc.). The media files are contained in a compressed archive (.tar.gz). they are placed in directories
				and subdirectories according to the sections and subsections to which they belong. The format of the media files
				that is uploaded here is the same as the media files that can be downloaded from the left side of the application
				(from the section
				<emphasis>Downloads</emphasis>
				), so that the media files that are downloaded from a docbookwiki application can be imported easily to another one.
			</para>
			<para>
				After the document has been uploaded, the superuser gives the book id and language of the new book and clicks the
				button
				<emphasis>Import</emphasis>
				besides the uploaded file(s).
			</para>
			<tip>
				<para>
					After a new book is created or imported into the system, it should be added also in the menu of books in order to
					become accessible. Otherwise, it can be accessed only through
					<ulink url="xref.php?/book_id" />
					.
				</para>
			</tip>
			<para>In this interface there is also a list of the books in the system, from which the superuser can go to the admin
				interface of each book. At the end of the list there is also a form for deleting books from the system. </para>
		</section>
		<section id="my_settings">
			<title>My Settings</title>
			<para>
				This interface is available to all the users (except superuser) and it can be accessed at
				<ulink url="admin.php" />
				. It allows the user to change his password and his personal data (name and email). There is also a list of the
				books where the user has admin rights, and a list of the edit rights of the user in the other books (which have been
				assigned to him by the admins of those books).
			</para>
			<para>There is also a list of the modified nodes, i.e. the nodes that have been modified and not yet approved and
				where the user has approve rights. By clicking one of them, he can go directly to the approve interface for that
				node. </para>
		</section>
		<section id="book_editors">
			<title>Book Editors</title>
			<para>Eash user that is admin of one or more books, can access also an interface for administrating books, at
				'edit.php'. "Administrating books" here means deciding which users can edit them and what access rights they have.
				This interface contains a list of the books that the user can administrate (which are assigned to him by the
				superuser). He can select one of the books, and for each of them he gets a list of the users that can edit the book.
				The edit rights of the selected user are displayed as well. He can add new users to the list, from the list of the
				users that have access to the system (are able to login), or other users that have not been subscribed to the system
				yet. He can also delete users from the list, which means that the deleted user will not be able to edit anymore this
				book (but maybe he has edit rights on other books). </para>
			<para>The edit rights of the selected user are displayed in a textarea. They can be edited manually or with the help
				of the tools below the textarea. The edit rights are composed of lines with column (':') separated fields, that
				allow or deny the user to do something. The second field contains the action that is allowed or denied, which can be
				'edit', 'approve, or 'edit,approve'. The third field is a node (or comma separated list of nodes) to which the
				action is allowed or denied; it can also be ALL, which matches any node. The nodes of the list can also be regular
				expressions. The last field is the language field and it is a comma separated list of language id-s, or ALL. </para>
			<para>The application looks up these edit rights, in order to decide whether a user can edit or approve a certain
				node of the book in a certain language. It looks all the lines from the top to the bottom and if the path of the
				node matches one of the regular expressions in the node list, and the language equals any of the languages in the
				language list, then the action of the line (edit/approve) is allowed (or denied). The keyword 'ALL' matches any node
				and any language. If more than one lines match the current node and language, then the decision of the last line is
				used. The decision is recursive, i.e. if edit/approve is allowed (denied) for a node, then it is automatically
				allowed (denied) for all the subnodes of the same language, unless it is explicitly denied (allowed) for some of
				them. By default, everything is denied, so that if you just add a user in the list of editors, but do not give any
				edit rights to him (no lines, empty edit rights), then he still will not be able to edit or approve anything. </para>
		</section>
	</chapter>
	<chapter id="developers">
		<title>Developers</title>
		<section id="how_to_modify">
			<title>How to Modify</title>
			<para>This section contains some help for people that are willing to "get their hands dirty" by modifying the
				application to suit their needs or tastes. </para>
			<section id="howto_modify_header">
				<title>Header</title>
				<para>How to modify the header background and the logo (on the top left)? </para>
				<orderedlist continuation="restarts" inheritnum="ignore" numeration="arabic">
					<listitem>
						<para>
							Replace
							<filename>graphics/header-background.png</filename>
							and
							<filename>header-logo.png</filename>
							with new images.
						</para>
					</listitem>
					<listitem>
						<para>
							Check that
							<filename>templates/main/header.html</filename>
							is OK.
						</para>
					</listitem>
					<listitem>
						<para>
							In case that the height of the new images is different from the original ones, you may also need to modify the
							<emphasis>block_top</emphasis>
							property of the menus:
							<itemizedlist>
								<listitem>
									<para>
										In
										<filename>templates/menu/menu_tpl.js</filename>
										:
										<programlisting>'block_top': 75,</programlisting>
									</para>
								</listitem>
								<listitem>
									<para>
										In
										<filename>templates/admin/users/edit/menu.js</filename>
										:
										<programlisting>MENU_POS[0].block_top = 56;</programlisting>
									</para>
								</listitem>
								<listitem>
									<para>
										In
										<filename>templates/admin/edit_menu/menu/menu.js</filename>
										:
										<programlisting>MENU_POS[0].block_top = 60;</programlisting>
									</para>
								</listitem>
							</itemizedlist>
						</para>
					</listitem>
				</orderedlist>
			</section>
			<section id="howto_modify_look">
				<title>Look and Layout</title>
				<para>
					The look and layout of the application is CSS and HTML files. Look at directories
					<filename>css/</filename>
					and
					<filename>templates/docbook/view/css/</filename>
					. Make also a search and find out what you would like to modify:
				</para>
				<screen>
					<prompt>bash$</prompt>
					<command>find templates/ -name '*.css'</command>
					templates/docbook/edit/media/edit_media.css
					templates/docbook/edit/content/edit_content.css
					templates/docbook/edit/edit.css
					templates/docbook/admin/admin.css
					templates/docbook/approve/revisions/revisions.css
					templates/docbook/approve/approve.css
					templates/docbook/docbook.css
					templates/main/left/left.css
					templates/main/menu/menu.css
					templates/main/search/search.css
					templates/languages/languages.css
					templates/admin/users/filter/userFilter.css
					templates/admin/addbook/book_list/book_list.css
					templates/admin/addbook/addbook.css
					templates/admin/user_data/edit_rights/edit_rights.css
					templates/admin/user_data/modified_nodes/modified_nodes.css
					templates/admin/user_data/user_data.css
					templates/admin/edit_menu/edit_menu.css
					templates/admin/book/uList/uList.css
					templates/admin/book/uEdit/uEdit.css
					templates/admin/books/books.css
					templates/admin/settings/settings.css
				</screen>
				<screen>
					<prompt>bash$</prompt>
					<command>find templates/ -name '*.html'</command>
					templates/docbook/langs/langs.html
					templates/docbook/edit/media/edit_media.html
					templates/docbook/edit/content/edit_content.html
					templates/docbook/edit/edit.html
					[. . . . .]
				</screen>
			</section>
			<section id="translate">
				<title>Translating the Application</title>
				<para>
					Standart practices of xgettext are used for i18n of the application. To translate the application in other
					languages, the scripts in
					<filename>l10n/</filename>
					can be usefull.
				</para>
				<para>To translate the messages for a language, do these: </para>
				<orderedlist numeration="arabic" inheritnum="ignore" continuation="restarts">
					<listitem>
						<para>
							First initialize the translation files:
							<screen>
								<prompt>bash$</prompt>
								<command>./xgettext.sh</command>
								<prompt>bash$</prompt>
								<command>./msginit.sh ll_CC</command>
							</screen>
							ll_CC is the language and country code, like 'en_US' or 'sq_AL'.
						</para>
					</listitem>
					<listitem>
						<para>
							Then, translate the messages in the translation file
							<filename>./ll_CC/LC_MESSAGES/book.po</filename>
						</para>
					</listitem>
					<listitem>
						<para>
							Finally, convert the translation file into binary format (*.mo):
							<screen>
								<prompt>bash$</prompt>
								<command>./msgfmt.sh ll_CC</command>
							</screen>
						</para>
					</listitem>
				</orderedlist>
				<para>
					To update the translation files (e.g. after a new release is out and the message strings may have changed), do:
					<screen>
						<prompt>bash$</prompt>
						<command>./xgettext.sh</command>
						<prompt>bash$</prompt>
						<command>./msgmerge.sh ll_CC</command>
					</screen>
				</para>
				<para>
					Then translate any new entries in the translation files, and then convert again to binary format:
					<command>./msgfmt.sh ll_CC</command>
					.
				</para>
				<para>
					Other gettext tools can be used as well, if needed. For more information about them see
					<command>info gettext</command>
					.
				</para>
			</section>
		</section>
		<section id="todo">
			<title>Future Modifications and Improvments</title>
			<para>The most important modifications or improvments that are expected to be done in the future: </para>
			<itemizedlist>
				<listitem>
					<para>Improve the interactivity of the application with AJAX. </para>
				</listitem>
				<listitem>
					<para>Write some wizards, so that DocBookEasy can be installed/configured/maintained entirely from the web. </para>
				</listitem>
				<listitem>
					<para>Add a wysiwyg editing mode. </para>
				</listitem>
				<listitem>
					<para>Implement the Texinfo editing mode. </para>
				</listitem>
				<listitem>
					<para>Implement the LaTeX editing mode. </para>
				</listitem>
			</itemizedlist>
			<para>
				Read also the file
				<filename>ToDo.txt</filename>
				in the project, for the current list of tasks, improvments, known bugs to be fixed, etc.
			</para>
		</section>
	</chapter>
	<chapter id="howto">
		<title>How To</title>
		<para>Here are some tips and tricks about how to do things. </para>
		<section id="spellcheck">
			<title>Spellcheck a Document</title>
			<para>Spellchecking ia not so easy in a web application, however it can be done easily in an editor like Emacs. So,
				to spellcheck a whole document, first commit all the modifications, re-generate the downloadables and get (download)
				the XML version of the document. Then spellcheck it with emacs or any other editor. Finally, login in the
				application as superuser, upload the corrected version of the document, and re-import it. It will overwrite the old
				version of the document. </para>
			<caution>
				<para>The modification in the document should be stopped somehow between the download and re-import time, otherwise
					the latest changes will be lost.</para>
			</caution>
			<important>
				<para>Re-importing a document will overwrite the old version of the document but also the history of the
					modifications. So, be careful about it.</para>
			</important>
		</section>
		<section id="relocate">
			<title>Relocate The Application</title>
			<para>
				Sometimes you may need to rename the directory of the application or to move it to another place. In this case the
				absolute path of the directory
				<filename>content/</filename>
				changes. The path of the subversion repositories changes as well, since they are inside this directory. As a result,
				the svn working copies (sandboxes) will not work anymore, because they are still connected to the old repositories,
				which do not exist now.
			</para>
			<para>
				In order to fix this, call the script
				<command>content/svn_relocate.sh</command>
				. It will switch the URL of the SVN working copies to the new location.
			</para>
		</section>
		<section id="upload_max_filesize">
			<title>Fix Uploads Problems</title>
			<para>
				If you have problems with the size of uploaded files (when importing documents or adding media files), this is a
				problem that should be fixed on the web server, usually at
				<filename>/etc/php.ini</filename>
				, by modifying
				<emphasis>upload_max_filesize</emphasis>
				.
			</para>
			<para>
				For more detailed information find any page in internet that discusses these issues. For example check
				<ulink url="http://www.radinks.com/upload/config.php">PHP Upload Configuration</ulink>
				.
			</para>
		</section>
	</chapter>
	<appendix id="GNU-FDL">
		<title>GNU Free Documentation License</title>
		<para>
			<indexterm role="cp" significance="normal">
				<primary>FDL, GNU Free Documentation License</primary>
			</indexterm>
			Version 1.2, November 2002
			<screen>Copyright (C) 2000,2001,2002 Free Software Foundation, Inc.
				59 Temple Place, Suite 330, Boston, MA 02111-1307, USA

				Everyone is permitted to copy and distribute verbatim copies
				of this license document, but changing it is not allowed.
			</screen>
		</para>
		<orderedlist continuation="continues" numeration="arabic" inheritnum="ignore">
			<listitem>
				<para>
					PREAMBLE
				</para>
				<para>
					The purpose of this License is to make a manual, textbook, or other
					functional and useful document
					<firstterm>free</firstterm>
					in the sense of freedom: to
					assure everyone the effective freedom to copy and redistribute it,
					with or without modifying it, either commercially or noncommercially.
					Secondarily, this License preserves for the author and publisher a way
					to get credit for their work, while not being considered responsible
					for modifications made by others.
				</para>
				<para>
					This License is a kind of "copyleft", which means that derivative
					works of the document must themselves be free in the same sense. It
					complements the GNU General Public License, which is a copyleft
					license designed for free software.
				</para>
				<para>
					We have designed this License in order to use it for manuals for free
					software, because free software needs free documentation: a free
					program should come with manuals providing the same freedoms that the
					software does. But this License is not limited to software manuals;
					it can be used for any textual work, regardless of subject matter or
					whether it is published as a printed book. We recommend this License
					principally for works whose purpose is instruction or reference.
				</para>
			</listitem>
			<listitem>
				<para>
					APPLICABILITY AND DEFINITIONS
				</para>
				<para>
					This License applies to any manual or other work, in any medium, that
					contains a notice placed by the copyright holder saying it can be
					distributed under the terms of this License. Such a notice grants a
					world-wide, royalty-free license, unlimited in duration, to use that
					work under the conditions stated herein. The "Document", below,
					refers to any such manual or work. Any member of the public is a
					licensee, and is addressed as "you". You accept the license if you
					copy, modify or distribute the work in a way requiring permission
					under copyright law.
				</para>
				<para>
					A "Modified Version" of the Document means any work containing the
					Document or a portion of it, either copied verbatim, or with
					modifications and/or translated into another language.
				</para>
				<para>
					A "Secondary Section" is a named appendix or a front-matter section
					of the Document that deals exclusively with the relationship of the
					publishers or authors of the Document to the Document's overall
					subject (or to related matters) and contains nothing that could fall
					directly within that overall subject. (Thus, if the Document is in
					part a textbook of mathematics, a Secondary Section may not explain
					any mathematics.) The relationship could be a matter of historical
					connection with the subject or with related matters, or of legal,
					commercial, philosophical, ethical or political position regarding
					them.
				</para>
				<para>
					The "Invariant Sections" are certain Secondary Sections whose titles
					are designated, as being those of Invariant Sections, in the notice
					that says that the Document is released under this License. If a
					section does not fit the above definition of Secondary then it is not
					allowed to be designated as Invariant. The Document may contain zero
					Invariant Sections. If the Document does not identify any Invariant
					Sections then there are none.
				</para>
				<para>
					The "Cover Texts" are certain short passages of text that are listed,
					as Front-Cover Texts or Back-Cover Texts, in the notice that says that
					the Document is released under this License. A Front-Cover Text may
					be at most 5 words, and a Back-Cover Text may be at most 25 words.
				</para>
				<para>
					A "Transparent" copy of the Document means a machine-readable copy,
					represented in a format whose specification is available to the
					general public, that is suitable for revising the document
					straightforwardly with generic text editors or (for images composed of
					pixels) generic paint programs or (for drawings) some widely available
					drawing editor, and that is suitable for input to text formatters or
					for automatic translation to a variety of formats suitable for input
					to text formatters. A copy made in an otherwise Transparent file
					format whose markup, or absence of markup, has been arranged to thwart
					or discourage subsequent modification by readers is not Transparent.
					An image format is not Transparent if used for any substantial amount
					of text. A copy that is not "Transparent" is called "Opaque".
				</para>
				<para>
					Examples of suitable formats for Transparent copies include plain
					ascii without markup, Texinfo input format, LaTeX input
					format,
					<acronym>SGML</acronym>
					or
					<acronym>XML</acronym>
					using a publicly available
					<acronym>DTD</acronym>
					, and standard-conforming simple
					<acronym>HTML</acronym>
					,
					PostScript or
					<acronym>PDF</acronym>
					designed for human modification. Examples
					of transparent image formats include
					<acronym>PNG</acronym>
					,
					<acronym>XCF</acronym>
					and
					<acronym>JPG</acronym>
					. Opaque formats include proprietary formats that can be
					read and edited only by proprietary word processors,
					<acronym>SGML</acronym>
					or
					<acronym>XML</acronym>
					for which the
					<acronym>DTD</acronym>
					and/or processing tools are
					not generally available, and the machine-generated
					<acronym>HTML</acronym>
					,
					PostScript or
					<acronym>PDF</acronym>
					produced by some word processors for
					output purposes only.
				</para>
				<para>
					The "Title Page" means, for a printed book, the title page itself,
					plus such following pages as are needed to hold, legibly, the material
					this License requires to appear in the title page. For works in
					formats which do not have any title page as such, "Title Page" means
					the text near the most prominent appearance of the work's title,
					preceding the beginning of the body of the text.
				</para>
				<para>
					A section "Entitled XYZ" means a named subunit of the Document whose
					title either is precisely XYZ or contains XYZ in parentheses following
					text that translates XYZ in another language. (Here XYZ stands for a
					specific section name mentioned below, such as "Acknowledgements",
					"Dedications", "Endorsements", or "History".) To "Preserve the Title"
					of such a section when you modify the Document means that it remains a
					section "Entitled XYZ" according to this definition.
				</para>
				<para>
					The Document may include Warranty Disclaimers next to the notice which
					states that this License applies to the Document. These Warranty
					Disclaimers are considered to be included by reference in this
					License, but only as regards disclaiming warranties: any other
					implication that these Warranty Disclaimers may have is void and has
					no effect on the meaning of this License.
				</para>
			</listitem>
			<listitem>
				<para>
					VERBATIM COPYING
				</para>
				<para>
					You may copy and distribute the Document in any medium, either
					commercially or noncommercially, provided that this License, the
					copyright notices, and the license notice saying this License applies
					to the Document are reproduced in all copies, and that you add no other
					conditions whatsoever to those of this License. You may not use
					technical measures to obstruct or control the reading or further
					copying of the copies you make or distribute. However, you may accept
					compensation in exchange for copies. If you distribute a large enough
					number of copies you must also follow the conditions in section 3.
				</para>
				<para>
					You may also lend copies, under the same conditions stated above, and
					you may publicly display copies.
				</para>
			</listitem>
			<listitem>
				<para>
					COPYING IN QUANTITY
				</para>
				<para>
					If you publish printed copies (or copies in media that commonly have
					printed covers) of the Document, numbering more than 100, and the
					Document's license notice requires Cover Texts, you must enclose the
					copies in covers that carry, clearly and legibly, all these Cover
					Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on
					the back cover. Both covers must also clearly and legibly identify
					you as the publisher of these copies. The front cover must present
					the full title with all words of the title equally prominent and
					visible. You may add other material on the covers in addition.
					Copying with changes limited to the covers, as long as they preserve
					the title of the Document and satisfy these conditions, can be treated
					as verbatim copying in other respects.
				</para>
				<para>
					If the required texts for either cover are too voluminous to fit
					legibly, you should put the first ones listed (as many as fit
					reasonably) on the actual cover, and continue the rest onto adjacent
					pages.
				</para>
				<para>
					If you publish or distribute Opaque copies of the Document numbering
					more than 100, you must either include a machine-readable Transparent
					copy along with each Opaque copy, or state in or with each Opaque copy
					a computer-network location from which the general network-using
					public has access to download using public-standard network protocols
					a complete Transparent copy of the Document, free of added material.
					If you use the latter option, you must take reasonably prudent steps,
					when you begin distribution of Opaque copies in quantity, to ensure
					that this Transparent copy will remain thus accessible at the stated
					location until at least one year after the last time you distribute an
					Opaque copy (directly or through your agents or retailers) of that
					edition to the public.
				</para>
				<para>
					It is requested, but not required, that you contact the authors of the
					Document well before redistributing any large number of copies, to give
					them a chance to provide you with an updated version of the Document.
				</para>
			</listitem>
			<listitem>
				<para>
					MODIFICATIONS
				</para>
				<para>
					You may copy and distribute a Modified Version of the Document under
					the conditions of sections 2 and 3 above, provided that you release
					the Modified Version under precisely this License, with the Modified
					Version filling the role of the Document, thus licensing distribution
					and modification of the Modified Version to whoever possesses a copy
					of it. In addition, you must do these things in the Modified Version:
				</para>
				<orderedlist numeration="upperalpha" inheritnum="ignore" continuation="restarts">
					<listitem>
						<para>
							Use in the Title Page (and on the covers, if any) a title distinct
							from that of the Document, and from those of previous versions
							(which should, if there were any, be listed in the History section
							of the Document). You may use the same title as a previous version
							if the original publisher of that version gives permission.
						</para>
					</listitem>
					<listitem>
						<para>
							List on the Title Page, as authors, one or more persons or entities
							responsible for authorship of the modifications in the Modified
							Version, together with at least five of the principal authors of the
							Document (all of its principal authors, if it has fewer than five),
							unless they release you from this requirement.
						</para>
					</listitem>
					<listitem>
						<para>
							State on the Title page the name of the publisher of the
							Modified Version, as the publisher.
						</para>
					</listitem>
					<listitem>
						<para>
							Preserve all the copyright notices of the Document.
						</para>
					</listitem>
					<listitem>
						<para>
							Add an appropriate copyright notice for your modifications
							adjacent to the other copyright notices.
						</para>
					</listitem>
					<listitem>
						<para>
							Include, immediately after the copyright notices, a license notice
							giving the public permission to use the Modified Version under the
							terms of this License, in the form shown in the Addendum below.
						</para>
					</listitem>
					<listitem>
						<para>
							Preserve in that license notice the full lists of Invariant Sections
							and required Cover Texts given in the Document's license notice.
						</para>
					</listitem>
					<listitem>
						<para>
							Include an unaltered copy of this License.
						</para>
					</listitem>
					<listitem>
						<para>
							Preserve the section Entitled "History", Preserve its Title, and add
							to it an item stating at least the title, year, new authors, and
							publisher of the Modified Version as given on the Title Page. If
							there is no section Entitled "History" in the Document, create one
							stating the title, year, authors, and publisher of the Document as
							given on its Title Page, then add an item describing the Modified
							Version as stated in the previous sentence.
						</para>
					</listitem>
					<listitem>
						<para>
							Preserve the network location, if any, given in the Document for
							public access to a Transparent copy of the Document, and likewise
							the network locations given in the Document for previous versions
							it was based on. These may be placed in the "History" section.
							You may omit a network location for a work that was published at
							least four years before the Document itself, or if the original
							publisher of the version it refers to gives permission.
						</para>
					</listitem>
					<listitem>
						<para>
							For any section Entitled "Acknowledgements" or "Dedications", Preserve
							the Title of the section, and preserve in the section all the
							substance and tone of each of the contributor acknowledgements and/or
							dedications given therein.
						</para>
					</listitem>
					<listitem>
						<para>
							Preserve all the Invariant Sections of the Document,
							unaltered in their text and in their titles. Section numbers
							or the equivalent are not considered part of the section titles.
						</para>
					</listitem>
					<listitem>
						<para>
							Delete any section Entitled "Endorsements". Such a section
							may not be included in the Modified Version.
						</para>
					</listitem>
					<listitem>
						<para>
							Do not retitle any existing section to be Entitled "Endorsements" or
							to conflict in title with any Invariant Section.
						</para>
					</listitem>
					<listitem>
						<para>
							Preserve any Warranty Disclaimers.
						</para>
					</listitem>
				</orderedlist>
				<para>
					If the Modified Version includes new front-matter sections or
					appendices that qualify as Secondary Sections and contain no material
					copied from the Document, you may at your option designate some or all
					of these sections as invariant. To do this, add their titles to the
					list of Invariant Sections in the Modified Version's license notice.
					These titles must be distinct from any other section titles.
				</para>
				<para>
					You may add a section Entitled "Endorsements", provided it contains
					nothing but endorsements of your Modified Version by various
					parties--for example, statements of peer review or that the text has
					been approved by an organization as the authoritative definition of a
					standard.
				</para>
				<para>
					You may add a passage of up to five words as a Front-Cover Text, and a
					passage of up to 25 words as a Back-Cover Text, to the end of the list
					of Cover Texts in the Modified Version. Only one passage of
					Front-Cover Text and one of Back-Cover Text may be added by (or
					through arrangements made by) any one entity. If the Document already
					includes a cover text for the same cover, previously added by you or
					by arrangement made by the same entity you are acting on behalf of,
					you may not add another; but you may replace the old one, on explicit
					permission from the previous publisher that added the old one.
				</para>
				<para>
					The author(s) and publisher(s) of the Document do not by this License
					give permission to use their names for publicity for or to assert or
					imply endorsement of any Modified Version.
				</para>
			</listitem>
			<listitem>
				<para>
					COMBINING DOCUMENTS
				</para>
				<para>
					You may combine the Document with other documents released under this
					License, under the terms defined in section 4 above for modified
					versions, provided that you include in the combination all of the
					Invariant Sections of all of the original documents, unmodified, and
					list them all as Invariant Sections of your combined work in its
					license notice, and that you preserve all their Warranty Disclaimers.
				</para>
				<para>
					The combined work need only contain one copy of this License, and
					multiple identical Invariant Sections may be replaced with a single
					copy. If there are multiple Invariant Sections with the same name but
					different contents, make the title of each such section unique by
					adding at the end of it, in parentheses, the name of the original
					author or publisher of that section if known, or else a unique number.
					Make the same adjustment to the section titles in the list of
					Invariant Sections in the license notice of the combined work.
				</para>
				<para>
					In the combination, you must combine any sections Entitled "History"
					in the various original documents, forming one section Entitled
					"History"; likewise combine any sections Entitled "Acknowledgements",
					and any sections Entitled "Dedications". You must delete all
					sections Entitled "Endorsements."
				</para>
			</listitem>
			<listitem>
				<para>
					COLLECTIONS OF DOCUMENTS
				</para>
				<para>
					You may make a collection consisting of the Document and other documents
					released under this License, and replace the individual copies of this
					License in the various documents with a single copy that is included in
					the collection, provided that you follow the rules of this License for
					verbatim copying of each of the documents in all other respects.
				</para>
				<para>
					You may extract a single document from such a collection, and distribute
					it individually under this License, provided you insert a copy of this
					License into the extracted document, and follow this License in all
					other respects regarding verbatim copying of that document.
				</para>
			</listitem>
			<listitem>
				<para>
					AGGREGATION WITH INDEPENDENT WORKS
				</para>
				<para>
					A compilation of the Document or its derivatives with other separate
					and independent documents or works, in or on a volume of a storage or
					distribution medium, is called an "aggregate" if the copyright
					resulting from the compilation is not used to limit the legal rights
					of the compilation's users beyond what the individual works permit.
					When the Document is included in an aggregate, this License does not
					apply to the other works in the aggregate which are not themselves
					derivative works of the Document.
				</para>
				<para>
					If the Cover Text requirement of section 3 is applicable to these
					copies of the Document, then if the Document is less than one half of
					the entire aggregate, the Document's Cover Texts may be placed on
					covers that bracket the Document within the aggregate, or the
					electronic equivalent of covers if the Document is in electronic form.
					Otherwise they must appear on printed covers that bracket the whole
					aggregate.
				</para>
			</listitem>
			<listitem>
				<para>
					TRANSLATION
				</para>
				<para>
					Translation is considered a kind of modification, so you may
					distribute translations of the Document under the terms of section 4.
					Replacing Invariant Sections with translations requires special
					permission from their copyright holders, but you may include
					translations of some or all Invariant Sections in addition to the
					original versions of these Invariant Sections. You may include a
					translation of this License, and all the license notices in the
					Document, and any Warranty Disclaimers, provided that you also include
					the original English version of this License and the original versions
					of those notices and disclaimers. In case of a disagreement between
					the translation and the original version of this License or a notice
					or disclaimer, the original version will prevail.
				</para>
				<para>
					If a section in the Document is Entitled "Acknowledgements",
					"Dedications", or "History", the requirement (section 4) to Preserve
					its Title (section 1) will typically require changing the actual
					title.
				</para>
			</listitem>
			<listitem>
				<para>
					TERMINATION
				</para>
				<para>
					You may not copy, modify, sublicense, or distribute the Document except
					as expressly provided for under this License. Any other attempt to
					copy, modify, sublicense or distribute the Document is void, and will
					automatically terminate your rights under this License. However,
					parties who have received copies, or rights, from you under this
					License will not have their licenses terminated so long as such
					parties remain in full compliance.
				</para>
			</listitem>
			<listitem>
				<para>
					FUTURE REVISIONS OF THIS LICENSE
				</para>
				<para>
					The Free Software Foundation may publish new, revised versions
					of the GNU Free Documentation License from time to time. Such new
					versions will be similar in spirit to the present version, but may
					differ in detail to address new problems or concerns. See
					http://www.gnu.org/copyleft/.
				</para>
				<para>
					Each version of the License is given a distinguishing version number.
					If the Document specifies that a particular numbered version of this
					License "or any later version" applies to it, you have the option of
					following the terms and conditions either of that specified version or
					of any later version that has been published (not as a draft) by the
					Free Software Foundation. If the Document does not specify a version
					number of this License, you may choose any version ever published (not
					as a draft) by the Free Software Foundation.
				</para>
			</listitem>
		</orderedlist>
		<section id="addendum">
			<title>ADDENDUM: How to use this License for your documents
			</title>
			<para>
				To use this License in a document you have written, include a copy of
				the License in the document and put the following copyright and
				license notices just after the title page:
			</para>
			<para>
				<screen>
					Copyright (C)
					<varname>year</varname>
					<varname>your name</varname>
					.
					Permission is granted to copy, distribute and/or modify this document
					under the terms of the GNU Free Documentation License, Version 1.2
					or any later version published by the Free Software Foundation;
					with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
					Texts. A copy of the license is included in the section entitled ``GNU
					Free Documentation License''.
				</screen>
			</para>
			<para>
				If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts,
				replace the "with...Texts." line with this:
			</para>
			<para>
				<screen>
					with the Invariant Sections being
					<varname>list their titles</varname>
					, with
					the Front-Cover Texts being
					<varname>list</varname>
					, and with the Back-Cover Texts
					being
					<varname>list</varname>
					.
				</screen>
			</para>
			<para>
				If you have Invariant Sections without Cover Texts, or some other
				combination of the three, merge those two alternatives to suit the
				situation.
			</para>
			<para>
				If your document contains nontrivial examples of program code, we
				recommend releasing these examples in parallel under your choice of
				free software license, such as the GNU General Public License,
				to permit their use in free software.
			</para>
		</section>
	</appendix>
</book>
